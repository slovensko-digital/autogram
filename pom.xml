<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.octosign.whitelabel</groupId>
    <artifactId>whitelabel</artifactId>
    <version>1.0.0</version>
    <packaging>jar</packaging>

    <name>Octosign White Label Signer</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>17</java.version>
        <dss.version>5.9</dss.version>
        <gson.version>2.8.9</gson.version>
        <dorkbox.systemtray.version>4.1</dorkbox.systemtray.version>
        <dorkbox.utilities.version>1.9</dorkbox.utilities.version>
        <apache.httpcomponents.version>4.5.13</apache.httpcomponents.version>
        <pdfjs.version>2.10.377</pdfjs.version>
        <main.class>com.octosign.whitelabel.ui.Main</main.class>
    </properties>

    <repositories>
        <repository>
            <id>cefdigital</id>
            <name>cefdigital</name>
            <url>https://ec.europa.eu/cefdigital/artifact/content/repositories/esignaturedss/</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>eu.europa.ec.joinup.sd-dss</groupId>
            <artifactId>dss-service</artifactId>
            <version>${dss.version}</version>
        </dependency>
        <dependency>
            <groupId>eu.europa.ec.joinup.sd-dss</groupId>
            <artifactId>dss-tsl-validation</artifactId>
            <version>${dss.version}</version>
        </dependency>
        <dependency>
            <groupId>eu.europa.ec.joinup.sd-dss</groupId>
            <artifactId>dss-crl-parser-stream</artifactId>
            <version>${dss.version}</version>
        </dependency>
        <dependency>
            <groupId>eu.europa.ec.joinup.sd-dss</groupId>
            <artifactId>dss-asic-xades</artifactId>
            <version>${dss.version}</version>
        </dependency>
        <dependency>
            <groupId>eu.europa.ec.joinup.sd-dss</groupId>
            <artifactId>dss-pades-pdfbox</artifactId>
            <version>${dss.version}</version>
        </dependency>
        <dependency>
            <groupId>eu.europa.ec.joinup.sd-dss</groupId>
            <artifactId>dss-token</artifactId>
            <version>${dss.version}</version>
        </dependency>
        <dependency>
            <groupId>eu.europa.ec.joinup.sd-dss</groupId>
            <artifactId>dss-utils-google-guava</artifactId>
            <version>${dss.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.dorkbox</groupId>
            <artifactId>SystemTray</artifactId>
            <version>${dorkbox.systemtray.version}</version>
        </dependency>
        <dependency>
            <groupId>com.dorkbox</groupId>
            <artifactId>Utilities</artifactId>
            <version>${dorkbox.utilities.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${apache.httpcomponents.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>

                <configuration>
                    <release>${java.version}</release>
                    <fork>true</fork>
                    <executable>${jlink.jdk.path}/bin/javac</executable>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>${main.class}</mainClass>
                            <classpathPrefix>dependency-jars/</classpathPrefix>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <!-- exclude e.g. junit as we need runtime dependencies only -->
                            <includeScope>runtime</includeScope>
                            <outputDirectory>${project.build.directory}/dependency-jars/</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>wagon-maven-plugin</artifactId>
                <version>2.0.2</version>
                <executions>
                    <execution>
                        <id>download-pdfjs-main</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>download-single</goal>
                        </goals>
                        <configuration>
                            <url>https://cdn.jsdelivr.net/npm/pdfjs-dist@${pdfjs.version}/build/pdf.min.js</url>
                            <toDir>${project.resources[0].directory}/com/octosign/whitelabel/ui/vendor/pdfjs</toDir>
                            <skipIfExists>true</skipIfExists>
                        </configuration>
                    </execution>
                    <execution>
                        <id>download-pdfjs-worker</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>download-single</goal>
                        </goals>
                        <configuration>
                            <url>https://cdn.jsdelivr.net/npm/pdfjs-dist@${pdfjs.version}/build/pdf.worker.min.js</url>
                            <toDir>${project.resources[0].directory}/com/octosign/whitelabel/ui/vendor/pdfjs</toDir>
                            <skipIfExists>true</skipIfExists>
                        </configuration>
                    </execution>
                    <execution>
                        <id>download-pdfjs-cmaps</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>download</goal>
                        </goals>
                        <configuration>
                            <url>https://cdn.jsdelivr.net/npm/pdfjs-dist@${pdfjs.version}</url>
                            <fromDir>cmaps</fromDir>
                            <toDir>${project.resources[0].directory}/com/octosign/whitelabel/ui/vendor/pdfjs/cmaps</toDir>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.igormaznitsa</groupId>
                <artifactId>mvn-jlink-wrapper</artifactId>
                <version>1.1.1</version>
                <executions>
                    <execution>
                        <id>cache-jdk-11</id>
                        <goals>
                            <goal>cache-jdk</goal>
                        </goals>
                        <configuration>
                            <jdkPathProperty>jlink.jdk.path</jdkPathProperty>
                            <jdkCachePath>${project.build.directory}${file.separator}jdkCache</jdkCachePath>

                            <authorization>${github.auth}</authorization>

                            <provider>BELLSOFT</provider>
                            <providerConfig>
                                <type>jdk</type>
                                <version>17.0.1+12</version>
                                <arch>amd64-full</arch>
                            </providerConfig>
                        </configuration>
                    </execution>

                    <execution>
                        <id>call-jdeps</id>
                        <goals>
                            <goal>jdeps</goal>
                        </goals>
                        <configuration>
                            <output>${project.build.directory}${file.separator}jdeps.out</output>
                            <options>
                                <option>--class-path</option>
                                <option>./target/dependency-jars/*</option>
                                <option>-R</option>
                                <option>--multi-release</option>
                                <option>${java.version}</option>
                                <option>-f</option>
                                <option>.*jar</option>
                                <option>${project.build.directory}${file.separator}${project.build.finalName}.jar</option>
                            </options>
                        </configuration>
                    </execution>

                    <execution>
                        <id>call-jlink</id>
                        <goals>
                            <goal>jlink</goal>
                        </goals>
                        <configuration>
                            <output>${project.build.directory}${file.separator}preparedJDK</output>
                            <modulePaths>
                                <path>${jlink.jdk.path}${file.separator}jmods</path>
                            </modulePaths>
                            <addModules>
                                <module>java.compiler</module>
                                <module>java.base</module>
                                <module>java.xml</module>
                                <module>java.desktop</module>
                                <module>java.naming</module>
                                <module>java.datatransfer</module>
                                <module>java.net.http</module>
                                <module>java.logging</module>
                                <module>java.sql</module>
                                <module>java.scripting</module>
                                <module>javafx.base</module>
                                <module>javafx.controls</module>
                                <module>javafx.fxml</module>
                                <module>javafx.graphics</module>
                                <module>javafx.web</module>
                                <!-- Needed for sun.misc.Unsafe used by JavaFX, shouldn't be used in our code -->
                                <module>jdk.unsupported</module>
                                <module>jdk.httpserver</module>
                            </addModules>
                            <options>
                                <option>--compress=2</option>
                                <option>--no-header-files</option>
                                <option>--no-man-pages</option>
                                <option>--strip-debug</option>
                                <option>--strip-native-commands</option>
                                <option>--add-modules</option>
                                <option>${crypto.modules}</option>
                            </options>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <descriptors>
                        <descriptor>src/main/scripts/bin.xml</descriptor>
                    </descriptors>
                    <finalName>${project.artifactId}-${project.version}-${platform}</finalName>
                    <appendAssemblyId>false</appendAssemblyId>
                </configuration>
                <executions>
                    <execution>
                        <id>prepare-distributable</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <executable>bash</executable>
                    <workingDirectory>${project.build.scriptSourceDirectory}${file.separator}resources</workingDirectory>
                    <arguments>
                        <argument>${project.build.scriptSourceDirectory}${file.separator}package.sh</argument>
                        <argument>${jlink.jdk.path}${file.separator}bin${file.separator}jpackage</argument>
                        <argument>${project.build.directory}${file.separator}${project.artifactId}-${project.version}-${platform}</argument>
                        <argument>${project.build.directory}${file.separator}preparedJDK</argument>
                        <argument>${project.basedir}${file.separator}src${file.separator}main${file.separator}resources${file.separator}com${file.separator}octosign${file.separator}whitelabel</argument>
                        <argument>${platform}</argument>
                        <argument>${project.version}</argument>
                        <argument>${project.build.directory}</argument>
                    </arguments>
                </configuration>
                <executions>
                    <execution>
                        <id>package-distributable</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>windows</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <properties>
                <platform>win</platform>
                <crypto.modules>jdk.crypto.cryptoki,jdk.crypto.mscapi</crypto.modules>
            </properties>
        </profile>

        <profile>
            <id>linux</id>
            <activation>
                <os>
                    <name>Linux</name>
                    <family>unix</family>
                </os>
            </activation>
            <properties>
                <platform>linux</platform>
                <crypto.modules>jdk.crypto.cryptoki</crypto.modules>
            </properties>
        </profile>

        <profile>
            <id>macos</id>
            <activation>
                <os>
                    <name>Mac OS X</name>
                    <family>unix</family>
                </os>
            </activation>
            <properties>
                <platform>mac</platform>
                <crypto.modules>jdk.crypto.cryptoki</crypto.modules>
            </properties>
        </profile>

        <profile>
            <id>github_authenticated</id>
            <activation>
                <property>
                    <name>env.GITHUB_TOKEN</name>
                </property>
            </activation>
            <properties>
                <github.auth>Bearer ${env.GITHUB_TOKEN}</github.auth>
            </properties>
        </profile>
    </profiles>
</project>
