openapi: 3.0.3
info:
  title: Octosign White Label Server
  description: 'This documentation describes Octosign White Label running in the server mode. If you have the custom protocol configured, you can launch it using the link [signer://launch/37200/*/key](signer://launch/37200/*/key).'
  termsOfService: https://whitelabel.octosign.com/legal/
  contact:
    name: Octosign White Label
    url: https://whitelabel.octosign.com/
    email: jakub@duras.me
  license:
    name: MIT
    url: https://github.com/octosign/white-label/blob/main/LICENSE
  version: 0.1.0
servers:
- url: http://localhost:37200
tags:
- name: Info
  description: Information and status of the server
- name: Sign
  description: Document signing
paths:
  /info:
    get:
      tags:
      - Info
      summary: Retrieve info and the current server status
      operationId: getInfo
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Info'
        403:
          description: 'Request came from an unexpected origin.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        405:
          description: 'Incorrect HTTP method.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        500:
          description: 'Request failed due to some unexpected error.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      x-code-samples:
        - lang: JavaScript
          source: |
            // TODO: Add code sample
  /sign:
    post:
      tags:
        - Sign
      summary: Sign a single document
      operationId: signDocument
      #      TODO: uncomment this as soon as it gets relevant (after merging templates)
      #      parameters:
      #      - name: template
      #        in: query
      #        description: Prefill parameters using a template
      #        required: false
      #        schema:
      #          type: string
      #          enum:
      #          - slovakia
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SignRequestBody'
            examples:
              Plain XML XAdES with Base64-encoded XML parameters with HTML transformation:
                $ref: '#/components/examples/XAdES-XML-Base64-HTML'

              Plain XML XAdES with Base64-encoded XML parameters with plaintext transformation:
                $ref: '#/components/examples/XAdES-XML-Base64-TXT'

              Plain XML XAdES with plaintext XML parameters with HTML transformation:
                $ref: '#/components/examples/XAdES-XML-TXT-HTML'

              Plain XML XAdES with plaintext XML parameters with plaintext transformation:
                $ref: '#/components/examples/XAdES-XML-TXT-TXT'

              XML XAdES in ASICe with Base64-encoded XML parameters and HTML transformation:
                $ref: '#/components/examples/XAdES-ASICE-Base64-HTML'

              XML XAdES in ASICe with Base64-encoded XML parameters and plaintext transformation:
                $ref: "#/components/examples/XAdES-ASICE-Base64-TXT"

              XML XAdES in ASICe with plaintext XML parameters and HTML transformation:
                $ref: '#/components/examples/XAdES-ASICE-TXT-HTML'

              XML XAdES in ASICe with plaintext XML parameters and plaintext transformation:
                $ref: "#/components/examples/XAdES-ASICE-TXT-TXT"

              PDF PAdES:
                $ref: "#/components/examples/PAdES"

        required: true
      responses:
        200:
          description: The document was successfully signed and its content is available in the response body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        403:
          description: 'Request came from an unexpected origin.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        405:
          description: 'Incorrect HTTP method.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        415:
          description: 'Unsupported request body MIME type.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        400:
          description: 'The request body cannot be processed.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        409:
          description: 'Server is not ready to process the request.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        500:
          description: 'Request failed due to some unexpected error.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'

components:
  schemas:
    Info:
      type: object
      properties:
        version:
          type: string
          example: '1.2.3'
        status:
          type: string
          enum:
          - LOADING
          - READY

    SignRequestBody:
      type: object
      properties:
        document:
          $ref: '#/components/schemas/Document'
        parameters:
          $ref: '#/components/schemas/SignatureParameters'
        payloadMimeType:
          type: string
          example: application/xml
          description: |
            MIME type for document content and signature parameters like transformation and schema.
            Binary files should be encoded using base64, e.g., `application/pdf;base64`.
            Text formats like XML can be optionally encoded using base64 but can be supplied as plain text as seen in the examples, in which case the type is `application/xml`.
        hmac:
          type: string
          description: |
            Base64 encoded HMAC-SHA512 of the nonce and body that is required if the server was launched with the optional secret key.
            You should encode the body prepared for sending and create its HMAC-SHA512 before encoding it again with this property.

            Example:

            0. Serialize the request body `body = serialize(payload)`.
            1. Calculate the SHA256 of the concatenated nonce and body `hash = sha256(nonce + body)`.
            2. Calculate the HMAC of the URI path and query and the prepared hash using the agreed on secret key `hmac = hmac-512(/sign?template=lorem + hash, key)`.
            3. Serialize the request body again, but this time with the calculated additional `hmac` property.
            4. Increase the nonce if the request succeeded.
      required:
      - document
      - parameters
      - payloadMimeType

    Document:
      type: object
      properties:
        id:
          type: string
          example: '123'
          description: Optional id you can use to identify the document yourself.
        title:
          type: string
          example: 'Contract 2021-14532'
          description: Optional title shown to the user when signing.
        content:
          type: string
          example: '<?xml version="1.0"?><Document><Title>Lorem Ipsum</Title></Document>'
          description: 'Content of the document to sign, format is dictated by `payloadMimeType`.'
        legalEffect:
          type: string
          example: 'By signing this document...'
          description: 'Optional legal effect of signing the document shown to the user when signing.'
      required:
      - content

    SignatureParameters:
      type: object
      properties:
        format:
          type: string
          enum:
          - PADES
          - XADES
          example: XADES
          description: 'Signature format PAdES is usable only with documents of type `application/pdf`. Format XAdES is usable with XML or with any file type if using an ASiC container.'

        level:
          type: string
          enum:
            - BASELINE_B
          example: BASELINE_B
          description: 'Optional signature level, defaults to BASELINE_B relevant for the signature format.'

        fileMimeType:
          type: string
          example: application/lor.ip.xmldatacontainer+xml
          description: Optional MIME type set on the output file. Useful with ASiC data container that can have a custom mime type.

        container:
          type: string
          enum:
          - ASICS
          - ASICE
          example: ASICE
          description: Optional container type that should be used to place the file with signature to.

        containerFilename:
          type: string
          example: General_Agenda.xml
          description: Filename to be used for the signed file within ASiC container.

        containerXmlns:
          type: string
          example: http://data.gov.sk/def/container/xmldatacontainer+xml/1.1
          description: XML namespace for the ASiC container.

        identifier:
          type: string
          example: https://data.gov.sk/id/egov/eform/App.GeneralAgenda/1.9
          description: Optional identifier of the document template.

        packaging:
          type: string
          enum:
          - ENVELOPED
          - ENVELOPING
          example: ENVELOPED
          description: Optional form of packaging used with XML. ENVELOPED adds the signature as a child of the root element while ENVELOPING wraps the XML in a new element. Defaults to ENVELOPED.

        digestAlgorithm:
          type: string
          enum:
          - SHA256
          - SHA384
          - SHA512
          example: SHA256
          description: Optional algorithm used to calculate digests. Defaults to SHA256.

        en319132:
          type: boolean
          example: false
          description: Optional flag to control whether the signature should be made according to EN 319132. Defaults to true.

        infoCanonicalization:
          type: string
          enum:
          - INCLUSIVE
          - EXCLUSIVE
          example: INCLUSIVE
          description: Optional info canonicalization method.

        propertiesCanonicalization:
          type: string
          enum:
          - INCLUSIVE
          - EXCLUSIVE
          example: INCLUSIVE
          description: Optional properties canonicalization method.

        keyInfoCanonicalization:
          type: string
          enum:
          - INCLUSIVE
          - EXCLUSIVE
          example: INCLUSIVE
          description: Optional key info canonicalization method.

        signaturePolicyId:
          type: string
          example: http://www.example.com/policy.txt
          description: Optional signature policy id, usually a URI.

        signaturePolicyContent:
          type: string
          example: Don't be evil.
          description: Optional signature policy content.

        schema:
          type: string
          example: '<?xml version="1.0"?><xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"><xs:element name="Document"><xs:complexType><xs:sequence><xs:element name="Title" type="xs:string" /></xs:sequence></xs:complexType></xs:element></xs:schema>'
          description: 'Optional XML schema, format is dictated by `payloadMimeType`.'

        transformation:
          type: string
          example: '<?xml version="1.0"?><xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"><xsl:template match = "/"><h1><xsl:value-of select="/Document/Title"/></h1></xsl:template></xsl:stylesheet>'
          description: 'Optional XML transformation, format is dictated by `payloadMimeType`.'

        transformationOutputMimeType:
          type: string
          example: text/html
          description: Optional transformation output MIME type. Required to display the result correctly.

      required:
      - format

    ErrorBody:
      type: object
      properties:
        code:
          type: string
          enum:
          - NOT_READY
          - UNSUPPORTED_OPERATION
          - MALFORMED_INPUT
          - UNSUPPORTED_FORMAT
          - SIGNING_FAILED
          - UNEXPECTED_ORIGIN
          - UNEXPECTED_ERROR
          example: MALFORMED_INPUT
          description: Code that can be used to identify the error.
        message:
          type: string
          example: Malformed input body.
          description: Mostly human readable error message.
        details:
          type: string
          example: 'Unable to switch to fourth dimension: java.lang.NullPointerException'
          description: Optional details, likely not human readable, like raw exception message.

  examples:
    XAdES-XML-Base64-HTML:
      value:
        document:
          content: "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48R2VuZXJhbEFnZW5kYSB4bWxucz0iaHR0cDovL3NjaGVtYXMuZ292LnNrL2Zvcm0vQXBwLkdlbmVyYWxBZ2VuZGEvMS45Ij4KICA8c3ViamVjdD5Ob3bDqSBwb2RhbmllPC9zdWJqZWN0PgogIDx0ZXh0PlBvZMOhdmFtIHRvdG8gbm92w6kgcG9kYW5pZS48L3RleHQ+CjwvR2VuZXJhbEFnZW5kYT4="
        parameters:
          format: XADES
          fileMimeType: application/xml
          container: null
          containerFilename: null
          containerXmlns: null
          schema: "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHhzOnNjaGVtYSBlbGVtZW50Rm9ybURlZmF1bHQ9InF1YWxpZmllZCIgYXR0cmlidXRlRm9ybURlZmF1bHQ9InVucXVhbGlmaWVkIiB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHRhcmdldE5hbWVzcGFjZT0iaHR0cDovL3NjaGVtYXMuZ292LnNrL2Zvcm0vQXBwLkdlbmVyYWxBZ2VuZGEvMS45IiB4bWxucz0iaHR0cDovL3NjaGVtYXMuZ292LnNrL2Zvcm0vQXBwLkdlbmVyYWxBZ2VuZGEvMS45Ij4KPHhzOnNpbXBsZVR5cGUgbmFtZT0idGV4dEFyZWEiPgo8eHM6cmVzdHJpY3Rpb24gYmFzZT0ieHM6c3RyaW5nIj4KPC94czpyZXN0cmljdGlvbj4KPC94czpzaW1wbGVUeXBlPgo8eHM6c2ltcGxlVHlwZSBuYW1lPSJtZW5vIj4KPHhzOnJlc3RyaWN0aW9uIGJhc2U9InhzOnN0cmluZyI+CjwveHM6cmVzdHJpY3Rpb24+CjwveHM6c2ltcGxlVHlwZT4KPHhzOmVsZW1lbnQgbmFtZT0iR2VuZXJhbEFnZW5kYSI+Cjx4czpjb21wbGV4VHlwZT4KPHhzOnNlcXVlbmNlPgo8eHM6ZWxlbWVudCBuYW1lPSJzdWJqZWN0IiB0eXBlPSJtZW5vIiBtaW5PY2N1cnM9IjAiIG5pbGxhYmxlPSJ0cnVlIiAvPgo8eHM6ZWxlbWVudCBuYW1lPSJ0ZXh0IiB0eXBlPSJ0ZXh0QXJlYSIgbWluT2NjdXJzPSIwIiBuaWxsYWJsZT0idHJ1ZSIgLz4KPC94czpzZXF1ZW5jZT4KPC94czpjb21wbGV4VHlwZT4KPC94czplbGVtZW50Pgo8L3hzOnNjaGVtYT4K"
          transformation: ""
          transformationOutputMimeType: text/html
        payloadMimeType: application/xml;base64

    XAdES-XML-Base64-TXT:
      value:
        document:
          content: "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48R2VuZXJhbEFnZW5kYSB4bWxucz0iaHR0cDovL3NjaGVtYXMuZ292LnNrL2Zvcm0vQXBwLkdlbmVyYWxBZ2VuZGEvMS45Ij4KICA8c3ViamVjdD5Ob3bDqSBwb2RhbmllPC9zdWJqZWN0PgogIDx0ZXh0PlBvZMOhdmFtIHRvdG8gbm92w6kgcG9kYW5pZS48L3RleHQ+CjwvR2VuZXJhbEFnZW5kYT4="
        parameters:
          format: XADES
          fileMimeType: application/xml
          container: null
          containerFilename: null
          containerXmlns: null
          schema: "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHhzOnNjaGVtYSBlbGVtZW50Rm9ybURlZmF1bHQ9InF1YWxpZmllZCIgYXR0cmlidXRlRm9ybURlZmF1bHQ9InVucXVhbGlmaWVkIiB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHRhcmdldE5hbWVzcGFjZT0iaHR0cDovL3NjaGVtYXMuZ292LnNrL2Zvcm0vQXBwLkdlbmVyYWxBZ2VuZGEvMS45IiB4bWxucz0iaHR0cDovL3NjaGVtYXMuZ292LnNrL2Zvcm0vQXBwLkdlbmVyYWxBZ2VuZGEvMS45Ij4KPHhzOnNpbXBsZVR5cGUgbmFtZT0idGV4dEFyZWEiPgo8eHM6cmVzdHJpY3Rpb24gYmFzZT0ieHM6c3RyaW5nIj4KPC94czpyZXN0cmljdGlvbj4KPC94czpzaW1wbGVUeXBlPgo8eHM6c2ltcGxlVHlwZSBuYW1lPSJtZW5vIj4KPHhzOnJlc3RyaWN0aW9uIGJhc2U9InhzOnN0cmluZyI+CjwveHM6cmVzdHJpY3Rpb24+CjwveHM6c2ltcGxlVHlwZT4KPHhzOmVsZW1lbnQgbmFtZT0iR2VuZXJhbEFnZW5kYSI+Cjx4czpjb21wbGV4VHlwZT4KPHhzOnNlcXVlbmNlPgo8eHM6ZWxlbWVudCBuYW1lPSJzdWJqZWN0IiB0eXBlPSJtZW5vIiBtaW5PY2N1cnM9IjAiIG5pbGxhYmxlPSJ0cnVlIiAvPgo8eHM6ZWxlbWVudCBuYW1lPSJ0ZXh0IiB0eXBlPSJ0ZXh0QXJlYSIgbWluT2NjdXJzPSIwIiBuaWxsYWJsZT0idHJ1ZSIgLz4KPC94czpzZXF1ZW5jZT4KPC94czpjb21wbGV4VHlwZT4KPC94czplbGVtZW50Pgo8L3hzOnNjaGVtYT4K"
          transformation: "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHhzbDpzdHlsZXNoZWV0IHZlcnNpb249IjEuMCIgeG1sbnM6eHNsPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L1hTTC9UcmFuc2Zvcm0iICB4bWxuczplZ29ucD0iaHR0cDovL3NjaGVtYXMuZ292LnNrL2Zvcm0vQXBwLkdlbmVyYWxBZ2VuZGEvMS45Ij4KPHhzbDpvdXRwdXQgbWV0aG9kPSJ0ZXh0IiBpbmRlbnQ9InllcyIgb21pdC14bWwtZGVjbGFyYXRpb249InllcyIvPgo8eHNsOnN0cmlwLXNwYWNlIGVsZW1lbnRzPSIqIiAvPgo8eHNsOnRlbXBsYXRlIG1hdGNoPSJlZ29ucDpHZW5lcmFsQWdlbmRhIj4KPHhzbDp0ZXh0PlbFoWVvYmVjbsOhIGFnZW5kYTwveHNsOnRleHQ+Cjx4c2w6YXBwbHktdGVtcGxhdGVzLz4KPC94c2w6dGVtcGxhdGU+Cjx4c2w6dGVtcGxhdGUgbWF0Y2g9ImVnb25wOkdlbmVyYWxBZ2VuZGEvZWdvbnA6c3ViamVjdCI+Cjx4c2w6aWYgdGVzdD0iLi90ZXh0KCkiPgo8eHNsOnRleHQ+JiN4QTs8L3hzbDp0ZXh0Pgo8eHNsOnRleHQ+JiMwOTs8L3hzbDp0ZXh0Pjx4c2w6dGV4dD5QcmVkbWV0OiA8L3hzbDp0ZXh0Pjx4c2w6Y2FsbC10ZW1wbGF0ZSBuYW1lPSJzdHJpbmctcmVwbGFjZS1hbGwiPjx4c2w6d2l0aC1wYXJhbSBuYW1lPSJ0ZXh0IiBzZWxlY3Q9Ii4iIC8+PHhzbDp3aXRoLXBhcmFtIG5hbWU9InJlcGxhY2UiIHNlbGVjdD0iJyYjMTA7JyIgLz48eHNsOndpdGgtcGFyYW0gbmFtZT0iYnkiIHNlbGVjdD0iJyYjMTM7JiMxMDsmIzA5OyciIC8+PC94c2w6Y2FsbC10ZW1wbGF0ZT4KPC94c2w6aWY+CjwveHNsOnRlbXBsYXRlPgo8eHNsOnRlbXBsYXRlIG1hdGNoPSJlZ29ucDpHZW5lcmFsQWdlbmRhL2Vnb25wOnRleHQiPgo8eHNsOmlmIHRlc3Q9Ii4vdGV4dCgpIj4KPHhzbDp0ZXh0PiYjeEE7PC94c2w6dGV4dD4KPHhzbDp0ZXh0PiYjMDk7PC94c2w6dGV4dD48eHNsOnRleHQ+VGV4dDogPC94c2w6dGV4dD48eHNsOmNhbGwtdGVtcGxhdGUgbmFtZT0ic3RyaW5nLXJlcGxhY2UtYWxsIj48eHNsOndpdGgtcGFyYW0gbmFtZT0idGV4dCIgc2VsZWN0PSIuIiAvPjx4c2w6d2l0aC1wYXJhbSBuYW1lPSJyZXBsYWNlIiBzZWxlY3Q9IicmIzEwOyciIC8+PHhzbDp3aXRoLXBhcmFtIG5hbWU9ImJ5IiBzZWxlY3Q9IicmIzEzOyYjMTA7JiMwOTsnIiAvPjwveHNsOmNhbGwtdGVtcGxhdGU+CjwveHNsOmlmPgo8L3hzbDp0ZW1wbGF0ZT4KPHhzbDp0ZW1wbGF0ZSBuYW1lPSJmb3JtYXRUb1NrRGF0ZSI+Cjx4c2w6cGFyYW0gbmFtZT0iZGF0ZSIgLz4KPHhzbDp2YXJpYWJsZSBuYW1lPSJkYXRlU3RyaW5nIiBzZWxlY3Q9InN0cmluZygkZGF0ZSkiIC8+Cjx4c2w6Y2hvb3NlPgo8eHNsOndoZW4gdGVzdD0iJGRhdGVTdHJpbmcgIT0gJycgYW5kIHN0cmluZy1sZW5ndGgoJGRhdGVTdHJpbmcpPTEwIGFuZCBzdHJpbmcobnVtYmVyKHN1YnN0cmluZygkZGF0ZVN0cmluZywgMSwgNCkpKSAhPSAnTmFOJyAiPgo8eHNsOnZhbHVlLW9mIHNlbGVjdD0iY29uY2F0KHN1YnN0cmluZygkZGF0ZVN0cmluZywgOSwgMiksICcuJywgc3Vic3RyaW5nKCRkYXRlU3RyaW5nLCA2LCAyKSwgJy4nLCBzdWJzdHJpbmcoJGRhdGVTdHJpbmcsIDEsIDQpKSIgLz4KPC94c2w6d2hlbj4KPHhzbDpvdGhlcndpc2U+Cjx4c2w6dmFsdWUtb2Ygc2VsZWN0PSIkZGF0ZVN0cmluZyI+PC94c2w6dmFsdWUtb2Y+CjwveHNsOm90aGVyd2lzZT4KPC94c2w6Y2hvb3NlPgo8L3hzbDp0ZW1wbGF0ZT4KPHhzbDp0ZW1wbGF0ZSBuYW1lPSJib29sZWFuQ2hlY2tib3hUb1N0cmluZyI+Cjx4c2w6cGFyYW0gbmFtZT0iYm9vbFZhbHVlIiAvPgo8eHNsOnZhcmlhYmxlIG5hbWU9ImJvb2xWYWx1ZVN0cmluZyIgc2VsZWN0PSJzdHJpbmcoJGJvb2xWYWx1ZSkiIC8+Cjx4c2w6Y2hvb3NlPgo8eHNsOndoZW4gdGVzdD0iJGJvb2xWYWx1ZVN0cmluZyA9ICd0cnVlJyAiPgo8eHNsOnRleHQ+w4FubzwveHNsOnRleHQ+CjwveHNsOndoZW4+Cjx4c2w6d2hlbiB0ZXN0PSIkYm9vbFZhbHVlU3RyaW5nID0gJ2ZhbHNlJyAiPgo8eHNsOnRleHQ+TmllPC94c2w6dGV4dD4KPC94c2w6d2hlbj4KPHhzbDp3aGVuIHRlc3Q9IiRib29sVmFsdWVTdHJpbmcgPSAnMScgIj4KPHhzbDp0ZXh0PsOBbm88L3hzbDp0ZXh0Pgo8L3hzbDp3aGVuPgo8eHNsOndoZW4gdGVzdD0iJGJvb2xWYWx1ZVN0cmluZyA9ICcwJyAiPgo8eHNsOnRleHQ+TmllPC94c2w6dGV4dD4KPC94c2w6d2hlbj4KPHhzbDpvdGhlcndpc2U+Cjx4c2w6dmFsdWUtb2Ygc2VsZWN0PSIkYm9vbFZhbHVlU3RyaW5nIj48L3hzbDp2YWx1ZS1vZj4KPC94c2w6b3RoZXJ3aXNlPgo8L3hzbDpjaG9vc2U+CjwveHNsOnRlbXBsYXRlPgo8eHNsOnRlbXBsYXRlIG5hbWU9ImZvcm1hdFRpbWVUcmltU2Vjb25kcyI+Cjx4c2w6cGFyYW0gbmFtZT0idGltZSIgLz4KPHhzbDp2YXJpYWJsZSBuYW1lPSJ0aW1lU3RyaW5nIiBzZWxlY3Q9InN0cmluZygkdGltZSkiIC8+Cjx4c2w6aWYgdGVzdD0iJHRpbWVTdHJpbmcgIT0gJyciPgo8eHNsOnZhbHVlLW9mIHNlbGVjdD0ic3Vic3RyaW5nKCR0aW1lU3RyaW5nLCAxLCA1KSIgLz4KPC94c2w6aWY+CjwveHNsOnRlbXBsYXRlPgo8eHNsOnRlbXBsYXRlIG5hbWU9ImZvcm1hdFRpbWUiPgo8eHNsOnBhcmFtIG5hbWU9InRpbWUiIC8+Cjx4c2w6dmFyaWFibGUgbmFtZT0idGltZVN0cmluZyIgc2VsZWN0PSJzdHJpbmcoJHRpbWUpIiAvPgo8eHNsOmlmIHRlc3Q9IiR0aW1lU3RyaW5nICE9ICcnIj4KPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9InN1YnN0cmluZygkdGltZVN0cmluZywgMSwgOCkiIC8+CjwveHNsOmlmPgo8L3hzbDp0ZW1wbGF0ZT4KPHhzbDp0ZW1wbGF0ZSBuYW1lPSJzdHJpbmctcmVwbGFjZS1hbGwiPgo8eHNsOnBhcmFtIG5hbWU9InRleHQiLz4KPHhzbDpwYXJhbSBuYW1lPSJyZXBsYWNlIi8+Cjx4c2w6cGFyYW0gbmFtZT0iYnkiLz4KPHhzbDpjaG9vc2U+Cjx4c2w6d2hlbiB0ZXN0PSJjb250YWlucygkdGV4dCwgJHJlcGxhY2UpIj4KPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9InN1YnN0cmluZy1iZWZvcmUoJHRleHQsJHJlcGxhY2UpIi8+Cjx4c2w6dmFsdWUtb2Ygc2VsZWN0PSIkYnkiLz4KPHhzbDpjYWxsLXRlbXBsYXRlIG5hbWU9InN0cmluZy1yZXBsYWNlLWFsbCI+Cjx4c2w6d2l0aC1wYXJhbSBuYW1lPSJ0ZXh0IiBzZWxlY3Q9InN1YnN0cmluZy1hZnRlcigkdGV4dCwkcmVwbGFjZSkiLz4KPHhzbDp3aXRoLXBhcmFtIG5hbWU9InJlcGxhY2UiIHNlbGVjdD0iJHJlcGxhY2UiLz4KPHhzbDp3aXRoLXBhcmFtIG5hbWU9ImJ5IiBzZWxlY3Q9IiRieSIgLz4KPC94c2w6Y2FsbC10ZW1wbGF0ZT4KPC94c2w6d2hlbj4KPHhzbDpvdGhlcndpc2U+Cjx4c2w6dmFsdWUtb2Ygc2VsZWN0PSIkdGV4dCIvPgo8L3hzbDpvdGhlcndpc2U+CjwveHNsOmNob29zZT4KPC94c2w6dGVtcGxhdGU+Cjx4c2w6dGVtcGxhdGUgbmFtZT0iZm9ybWF0VG9Ta0RhdGVUaW1lIj4KPHhzbDpwYXJhbSBuYW1lPSJkYXRlVGltZSIgLz4KPHhzbDp2YXJpYWJsZSBuYW1lPSJkYXRlVGltZVN0cmluZyIgc2VsZWN0PSJzdHJpbmcoJGRhdGVUaW1lKSIgLz4KPHhzbDpjaG9vc2U+Cjx4c2w6d2hlbiB0ZXN0PSIkZGF0ZVRpbWVTdHJpbmchPSAnJyBhbmQgc3RyaW5nLWxlbmd0aCgkZGF0ZVRpbWVTdHJpbmcpPjE4IGFuZCBzdHJpbmcobnVtYmVyKHN1YnN0cmluZygkZGF0ZVRpbWVTdHJpbmcsIDEsIDQpKSkgIT0gJ05hTicgIj4KPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9ImNvbmNhdChzdWJzdHJpbmcoJGRhdGVUaW1lU3RyaW5nLCA5LCAyKSwgJy4nLCBzdWJzdHJpbmcoJGRhdGVUaW1lU3RyaW5nLCA2LCAyKSwgJy4nLCBzdWJzdHJpbmcoJGRhdGVUaW1lU3RyaW5nLCAxLCA0KSwnICcsIHN1YnN0cmluZygkZGF0ZVRpbWVTdHJpbmcsIDEyLCAyKSwnOicsIHN1YnN0cmluZygkZGF0ZVRpbWVTdHJpbmcsIDE1LCAyKSkiIC8+CjwveHNsOndoZW4+Cjx4c2w6b3RoZXJ3aXNlPgo8eHNsOnZhbHVlLW9mIHNlbGVjdD0iJGRhdGVUaW1lU3RyaW5nIj48L3hzbDp2YWx1ZS1vZj4KPC94c2w6b3RoZXJ3aXNlPgo8L3hzbDpjaG9vc2U+CjwveHNsOnRlbXBsYXRlPgo8eHNsOnRlbXBsYXRlIG5hbWU9ImZvcm1hdFRvU2tEYXRlVGltZVNlY29uZCI+Cjx4c2w6cGFyYW0gbmFtZT0iZGF0ZVRpbWUiIC8+Cjx4c2w6dmFyaWFibGUgbmFtZT0iZGF0ZVRpbWVTdHJpbmciIHNlbGVjdD0ic3RyaW5nKCRkYXRlVGltZSkiIC8+Cjx4c2w6Y2hvb3NlPgo8eHNsOndoZW4gdGVzdD0iJGRhdGVUaW1lU3RyaW5nIT0gJycgYW5kIHN0cmluZy1sZW5ndGgoJGRhdGVUaW1lU3RyaW5nKT4xOCBhbmQgc3RyaW5nKG51bWJlcihzdWJzdHJpbmcoJGRhdGVUaW1lU3RyaW5nLCAxLCA0KSkpICE9ICdOYU4nICI+Cjx4c2w6dmFsdWUtb2Ygc2VsZWN0PSJjb25jYXQoc3Vic3RyaW5nKCRkYXRlVGltZVN0cmluZywgOSwgMiksICcuJywgc3Vic3RyaW5nKCRkYXRlVGltZVN0cmluZywgNiwgMiksICcuJywgc3Vic3RyaW5nKCRkYXRlVGltZVN0cmluZywgMSwgNCksJyAnLCBzdWJzdHJpbmcoJGRhdGVUaW1lU3RyaW5nLCAxMiwgMiksJzonLCBzdWJzdHJpbmcoJGRhdGVUaW1lU3RyaW5nLCAxNSwgMiksJzonLCBzdWJzdHJpbmcoJGRhdGVUaW1lU3RyaW5nLCAxOCwgMikpIiAvPgo8L3hzbDp3aGVuPgo8eHNsOm90aGVyd2lzZT4KPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9IiRkYXRlVGltZVN0cmluZyI+PC94c2w6dmFsdWUtb2Y+CjwveHNsOm90aGVyd2lzZT4KPC94c2w6Y2hvb3NlPgo8L3hzbDp0ZW1wbGF0ZT4KPC94c2w6c3R5bGVzaGVldD4K"
          transformationOutputMimeType: text/plain
        payloadMimeType: application/xml;base64

    XAdES-XML-TXT-HTML:
      value:
        document:
          content: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><GeneralAgenda xmlns=\"http://schemas.gov.sk/form/App.GeneralAgenda/1.9\">\n  <subject>Nové podanie</subject>\n  <text>Podávam toto nové podanie.</text>\n</GeneralAgenda>"
        parameters:
          format: XADES
          fileMimeType: application/xml
          container: null
          containerFilename: null
          containerXmlns: null
          schema: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" targetNamespace=\"http://schemas.gov.sk/form/App.GeneralAgenda/1.9\" xmlns=\"http://schemas.gov.sk/form/App.GeneralAgenda/1.9\">\n<xs:simpleType name=\"textArea\">\n<xs:restriction base=\"xs:string\">\n</xs:restriction>\n</xs:simpleType>\n<xs:simpleType name=\"meno\">\n<xs:restriction base=\"xs:string\">\n</xs:restriction>\n</xs:simpleType>\n<xs:element name=\"GeneralAgenda\">\n<xs:complexType>\n<xs:sequence>\n<xs:element name=\"subject\" type=\"meno\" minOccurs=\"0\" nillable=\"true\" />\n<xs:element name=\"text\" type=\"textArea\" minOccurs=\"0\" nillable=\"true\" />\n</xs:sequence>\n</xs:complexType>\n</xs:element>\n</xs:schema>\n"
          transformation: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<xsl:stylesheet version=\"1.0\"  xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"  xmlns:egonp=\"http://schemas.gov.sk/form/App.GeneralAgenda/1.9\" exclude-result-prefixes=\"egonp\">\r\n<xsl:output method=\"html\" doctype-system=\"http://www.w3.org/TR/html4/strict.dtd\" doctype-public=\"-//W3C//DTD HTML 4.01//EN\" indent=\"no\" omit-xml-declaration=\"yes\"/>\r\n<xsl:template match=\"/\">\r\n<html>\r\n<head>\r\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=8\" />\r\n<title>Všeobecná agenda</title>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"/>\r\n<meta name=\"language\" content=\"sk-SK\"/>\r\n<style type=\"text/css\">\r\nbody { \r\n\tfont-family: 'Open Sans', 'Segoe UI', 'Trebuchet MS', 'Geneva CE', lucida, sans-serif;\r\n\tbackground : #ffffff !important ;\r\n}\r\n.ui-tabs {\r\n\tpadding: .2em;\r\n\tposition: relative;\r\n\tzoom: 1;\r\n}\t\t\t\t\t\t\t\t\r\n.clear { clear: both; height: 0;}\r\n.layoutMain {\r\n\tmargin: 0px auto;\r\n\tpadding: 5px 5px 5px 5px;\t\r\n}\t\t\t\t\r\n.layoutRow { margin-bottom: 5px; }\t\t\t\t\r\n.caption { /*width: 100%; border-bottom: solid 1px black;*/ }\r\n.nocaption &gt; .caption { border: 0px !important; }\r\n.nocaption &gt; .caption span {\r\n\tbackground: none !important;\r\n\tdisplay: none;\r\n} \r\n.caption .title { padding-left: 5px; }\r\n.headercorrection {\t\r\n\tmargin: 0px;\r\n    font-size : 1em;\r\n    font-weight: bold;\r\n}\t\t\t\t\r\n.labelVis {\r\n\tfloat: left;\r\n\tfont-weight: bold;\r\n\tfont-family: 'Open Sans', 'Segoe UI', 'Trebuchet MS', 'Geneva CE', lucida, sans-serif;\r\n\tline-height: 25px;\r\n\tmargin: 0px 18px 0px 0px;\r\n\tpadding-left: 3px;\r\n\twidth: 190px;\r\n\tword-wrap: break-word;\r\n    font-size: 0.8em;\r\n}\r\n.contentVis {    \t     \r\n\tfloat: left;\t\r\n\tline-height: 25px;\r\n\tmargin: 0px;\r\n\tpadding: 0px;\r\n\tvertical-align: top;\r\n    font-size: 0.75em;\t\t\t\r\n}\r\n.wordwrap { \r\n    white-space: pre-wrap;      \r\n    white-space: -moz-pre-wrap; \r\n    white-space: -pre-wrap;     \r\n    white-space: -o-pre-wrap;   \r\n    word-wrap: break-word;      \r\n}\t\r\n.ui-widget-content {\r\n\tbackground : 50% 50% repeat-x #ffffff;\r\n\tborder : #d4d4d4 solid 2px;\r\n\tcolor : #4f4e4e;\r\n\tborder-radius : 3px;\r\n}\r\n.ui-widget-header {\r\n\tcursor : pointer;\r\n\tfont-size : 0.8em;\r\n\tcolor : #494949;\r\n\tpadding-left : 2px;\r\n\tborder : #eae9e8 solid 1px;\r\n\tbackground-color : #eae9e8;\r\n\tmargin-bottom: 3px;\r\n\tborder-radius : 3px;\r\n}\t\t\t\r\n</style>\r\n</head>\r\n<body>\r\n<div id=\"main\" class=\"layoutMain\">\r\n<xsl:apply-templates/>\r\n</div>\r\n</body>\r\n</html>\r\n</xsl:template>\r\n<xsl:template match=\"/egonp:GeneralAgenda\">\r\n<div class=\"layoutRow ui-tabs ui-widget-content\" >\r\n<div class=\"caption ui-widget-header\">\r\n<div class=\"headercorrection\">Všeobecná agenda</div>\r\n</div>\r\n<xsl:apply-templates select=\"./egonp:subject\"/>\r\n<xsl:apply-templates select=\"./egonp:text\"/>\r\n</div>\r\n</xsl:template>\r\n<xsl:template match=\"egonp:GeneralAgenda/egonp:subject\">\r\n<xsl:if test=\"./text()\">\r\n<div><label class=\"labelVis\">Predmet: </label><span class=\"contentVis wordwrap\"><xsl:call-template name=\"string-replace-all\"><xsl:with-param name=\"text\" select=\".\" /><xsl:with-param name=\"replace\" select=\"'%0A'\" /><xsl:with-param name=\"by\" select=\"'&#13;&#10;'\" /></xsl:call-template></span></div><div class=\"clear\">&#xa0;</div></xsl:if>\r\n</xsl:template>\r\n<xsl:template match=\"egonp:GeneralAgenda/egonp:text\">\r\n<xsl:if test=\"./text()\">\r\n<div><label class=\"labelVis\">Text: </label><span class=\"contentVis wordwrap\"><xsl:call-template name=\"string-replace-all\"><xsl:with-param name=\"text\" select=\".\" /><xsl:with-param name=\"replace\" select=\"'%0A'\" /><xsl:with-param name=\"by\" select=\"'&#13;&#10;'\" /></xsl:call-template></span></div><div class=\"clear\">&#xa0;</div></xsl:if>\r\n</xsl:template>\r\n<xsl:template name=\"formatToSkDate\">\r\n<xsl:param name=\"date\" />\r\n<xsl:variable name=\"dateString\" select=\"string($date)\" />\r\n<xsl:choose>\r\n<xsl:when test=\"$dateString != '' and string-length($dateString)=10 and string(number(substring($dateString, 1, 4))) != 'NaN' \">\r\n<xsl:value-of select=\"concat(substring($dateString, 9, 2), '.', substring($dateString, 6, 2), '.', substring($dateString, 1, 4))\" />\r\n</xsl:when>\r\n<xsl:otherwise>\r\n<xsl:value-of select=\"$dateString\"></xsl:value-of>\r\n</xsl:otherwise>\r\n</xsl:choose>\r\n</xsl:template>\r\n<xsl:template name=\"booleanCheckboxToString\">\r\n<xsl:param name=\"boolValue\" />\r\n<xsl:variable name=\"boolValueString\" select=\"string($boolValue)\" />\r\n<xsl:choose>\r\n<xsl:when test=\"$boolValueString = 'true' \">\r\n<xsl:text>Áno</xsl:text>\r\n</xsl:when>\r\n<xsl:when test=\"$boolValueString = 'false' \">\r\n<xsl:text>Nie</xsl:text>\r\n</xsl:when>\r\n<xsl:when test=\"$boolValueString = '1' \">\r\n<xsl:text>Áno</xsl:text>\r\n</xsl:when>\r\n<xsl:when test=\"$boolValueString = '0' \">\r\n<xsl:text>Nie</xsl:text>\r\n</xsl:when>\r\n<xsl:otherwise>\r\n<xsl:value-of select=\"$boolValueString\"></xsl:value-of>\r\n</xsl:otherwise>\r\n</xsl:choose>\r\n</xsl:template>\r\n<xsl:template name=\"formatTimeTrimSeconds\">\r\n<xsl:param name=\"time\" />\r\n<xsl:variable name=\"timeString\" select=\"string($time)\" />\r\n<xsl:if test=\"$timeString != ''\">\r\n<xsl:value-of select=\"substring($timeString, 1, 5)\" />\r\n</xsl:if>\r\n</xsl:template>\r\n<xsl:template name=\"formatTime\">\r\n<xsl:param name=\"time\" />\r\n<xsl:variable name=\"timeString\" select=\"string($time)\" />\r\n<xsl:if test=\"$timeString != ''\">\r\n<xsl:value-of select=\"substring($timeString, 1, 8)\" />\r\n</xsl:if>\r\n</xsl:template>\r\n<xsl:template name=\"string-replace-all\">\r\n<xsl:param name=\"text\"/>\r\n<xsl:param name=\"replace\"/>\r\n<xsl:param name=\"by\"/>\r\n<xsl:choose>\r\n<xsl:when test=\"contains($text, $replace)\">\r\n<xsl:value-of select=\"substring-before($text,$replace)\"/>\r\n<xsl:value-of select=\"$by\"/>\r\n<xsl:call-template name=\"string-replace-all\">\r\n<xsl:with-param name=\"text\" select=\"substring-after($text,$replace)\"/>\r\n<xsl:with-param name=\"replace\" select=\"$replace\"/>\r\n<xsl:with-param name=\"by\" select=\"$by\" />\r\n</xsl:call-template>\r\n</xsl:when>\r\n<xsl:otherwise>\r\n<xsl:value-of select=\"$text\"/>\r\n</xsl:otherwise>\r\n</xsl:choose>\r\n</xsl:template>\r\n<xsl:template name=\"formatToSkDateTime\">\r\n<xsl:param name=\"dateTime\" />\r\n<xsl:variable name=\"dateTimeString\" select=\"string($dateTime)\" />\r\n<xsl:choose>\r\n<xsl:when test=\"$dateTimeString!= '' and string-length($dateTimeString)>18 and string(number(substring($dateTimeString, 1, 4))) != 'NaN' \">\r\n<xsl:value-of select=\"concat(substring($dateTimeString, 9, 2), '.', substring($dateTimeString, 6, 2), '.', substring($dateTimeString, 1, 4),' ', substring($dateTimeString, 12, 2),':', substring($dateTimeString, 15, 2))\" />\r\n</xsl:when>\r\n<xsl:otherwise>\r\n<xsl:value-of select=\"$dateTimeString\"></xsl:value-of>\r\n</xsl:otherwise>\r\n</xsl:choose>\r\n</xsl:template>\r\n<xsl:template name=\"formatToSkDateTimeSecond\">\r\n<xsl:param name=\"dateTime\" />\r\n<xsl:variable name=\"dateTimeString\" select=\"string($dateTime)\" />\r\n<xsl:choose>\r\n<xsl:when test=\"$dateTimeString!= '' and string-length($dateTimeString)>18 and string(number(substring($dateTimeString, 1, 4))) != 'NaN' \">\r\n<xsl:value-of select=\"concat(substring($dateTimeString, 9, 2), '.', substring($dateTimeString, 6, 2), '.', substring($dateTimeString, 1, 4),' ', substring($dateTimeString, 12, 2),':', substring($dateTimeString, 15, 2),':', substring($dateTimeString, 18, 2))\" />\r\n</xsl:when>\r\n<xsl:otherwise>\r\n<xsl:value-of select=\"$dateTimeString\"></xsl:value-of>\r\n</xsl:otherwise>\r\n</xsl:choose>\r\n</xsl:template>\r\n</xsl:stylesheet>\r\n\r\n"
          transformationOutputMimeType: text/html
        payloadMimeType: application/xml

    XAdES-XML-TXT-TXT:
      value:
        document:
          content: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><GeneralAgenda xmlns=\"http://schemas.gov.sk/form/App.GeneralAgenda/1.9\">\n  <subject>Nové podanie</subject>\n  <text>Podávam toto nové podanie.</text>\n</GeneralAgenda>"
        parameters:
          format: XADES
          fileMimeType: application/xml
          container: null
          containerFilename: null
          containerXmlns: null
          schema: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" targetNamespace=\"http://schemas.gov.sk/form/App.GeneralAgenda/1.9\" xmlns=\"http://schemas.gov.sk/form/App.GeneralAgenda/1.9\">\n<xs:simpleType name=\"textArea\">\n<xs:restriction base=\"xs:string\">\n</xs:restriction>\n</xs:simpleType>\n<xs:simpleType name=\"meno\">\n<xs:restriction base=\"xs:string\">\n</xs:restriction>\n</xs:simpleType>\n<xs:element name=\"GeneralAgenda\">\n<xs:complexType>\n<xs:sequence>\n<xs:element name=\"subject\" type=\"meno\" minOccurs=\"0\" nillable=\"true\" />\n<xs:element name=\"text\" type=\"textArea\" minOccurs=\"0\" nillable=\"true\" />\n</xs:sequence>\n</xs:complexType>\n</xs:element>\n</xs:schema>\n"
          transformation: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"  xmlns:egonp=\"http://schemas.gov.sk/form/App.GeneralAgenda/1.9\">\n<xsl:output method=\"text\" indent=\"yes\" omit-xml-declaration=\"yes\"/>\n<xsl:strip-space elements=\"*\" />\n<xsl:template match=\"egonp:GeneralAgenda\">\n<xsl:text>Všeobecná agenda</xsl:text>\n<xsl:apply-templates/>\n</xsl:template>\n<xsl:template match=\"egonp:GeneralAgenda/egonp:subject\">\n<xsl:if test=\"./text()\">\n<xsl:text>&#xA;</xsl:text>\n<xsl:text>&#09;</xsl:text><xsl:text>Predmet: </xsl:text><xsl:call-template name=\"string-replace-all\"><xsl:with-param name=\"text\" select=\".\" /><xsl:with-param name=\"replace\" select=\"'&#10;'\" /><xsl:with-param name=\"by\" select=\"'&#13;&#10;&#09;'\" /></xsl:call-template>\n</xsl:if>\n</xsl:template>\n<xsl:template match=\"egonp:GeneralAgenda/egonp:text\">\n<xsl:if test=\"./text()\">\n<xsl:text>&#xA;</xsl:text>\n<xsl:text>&#09;</xsl:text><xsl:text>Text: </xsl:text><xsl:call-template name=\"string-replace-all\"><xsl:with-param name=\"text\" select=\".\" /><xsl:with-param name=\"replace\" select=\"'&#10;'\" /><xsl:with-param name=\"by\" select=\"'&#13;&#10;&#09;'\" /></xsl:call-template>\n</xsl:if>\n</xsl:template>\n<xsl:template name=\"formatToSkDate\">\n<xsl:param name=\"date\" />\n<xsl:variable name=\"dateString\" select=\"string($date)\" />\n<xsl:choose>\n<xsl:when test=\"$dateString != '' and string-length($dateString)=10 and string(number(substring($dateString, 1, 4))) != 'NaN' \">\n<xsl:value-of select=\"concat(substring($dateString, 9, 2), '.', substring($dateString, 6, 2), '.', substring($dateString, 1, 4))\" />\n</xsl:when>\n<xsl:otherwise>\n<xsl:value-of select=\"$dateString\"></xsl:value-of>\n</xsl:otherwise>\n</xsl:choose>\n</xsl:template>\n<xsl:template name=\"booleanCheckboxToString\">\n<xsl:param name=\"boolValue\" />\n<xsl:variable name=\"boolValueString\" select=\"string($boolValue)\" />\n<xsl:choose>\n<xsl:when test=\"$boolValueString = 'true' \">\n<xsl:text>Áno</xsl:text>\n</xsl:when>\n<xsl:when test=\"$boolValueString = 'false' \">\n<xsl:text>Nie</xsl:text>\n</xsl:when>\n<xsl:when test=\"$boolValueString = '1' \">\n<xsl:text>Áno</xsl:text>\n</xsl:when>\n<xsl:when test=\"$boolValueString = '0' \">\n<xsl:text>Nie</xsl:text>\n</xsl:when>\n<xsl:otherwise>\n<xsl:value-of select=\"$boolValueString\"></xsl:value-of>\n</xsl:otherwise>\n</xsl:choose>\n</xsl:template>\n<xsl:template name=\"formatTimeTrimSeconds\">\n<xsl:param name=\"time\" />\n<xsl:variable name=\"timeString\" select=\"string($time)\" />\n<xsl:if test=\"$timeString != ''\">\n<xsl:value-of select=\"substring($timeString, 1, 5)\" />\n</xsl:if>\n</xsl:template>\n<xsl:template name=\"formatTime\">\n<xsl:param name=\"time\" />\n<xsl:variable name=\"timeString\" select=\"string($time)\" />\n<xsl:if test=\"$timeString != ''\">\n<xsl:value-of select=\"substring($timeString, 1, 8)\" />\n</xsl:if>\n</xsl:template>\n<xsl:template name=\"string-replace-all\">\n<xsl:param name=\"text\"/>\n<xsl:param name=\"replace\"/>\n<xsl:param name=\"by\"/>\n<xsl:choose>\n<xsl:when test=\"contains($text, $replace)\">\n<xsl:value-of select=\"substring-before($text,$replace)\"/>\n<xsl:value-of select=\"$by\"/>\n<xsl:call-template name=\"string-replace-all\">\n<xsl:with-param name=\"text\" select=\"substring-after($text,$replace)\"/>\n<xsl:with-param name=\"replace\" select=\"$replace\"/>\n<xsl:with-param name=\"by\" select=\"$by\" />\n</xsl:call-template>\n</xsl:when>\n<xsl:otherwise>\n<xsl:value-of select=\"$text\"/>\n</xsl:otherwise>\n</xsl:choose>\n</xsl:template>\n<xsl:template name=\"formatToSkDateTime\">\n<xsl:param name=\"dateTime\" />\n<xsl:variable name=\"dateTimeString\" select=\"string($dateTime)\" />\n<xsl:choose>\n<xsl:when test=\"$dateTimeString!= '' and string-length($dateTimeString)>18 and string(number(substring($dateTimeString, 1, 4))) != 'NaN' \">\n<xsl:value-of select=\"concat(substring($dateTimeString, 9, 2), '.', substring($dateTimeString, 6, 2), '.', substring($dateTimeString, 1, 4),' ', substring($dateTimeString, 12, 2),':', substring($dateTimeString, 15, 2))\" />\n</xsl:when>\n<xsl:otherwise>\n<xsl:value-of select=\"$dateTimeString\"></xsl:value-of>\n</xsl:otherwise>\n</xsl:choose>\n</xsl:template>\n<xsl:template name=\"formatToSkDateTimeSecond\">\n<xsl:param name=\"dateTime\" />\n<xsl:variable name=\"dateTimeString\" select=\"string($dateTime)\" />\n<xsl:choose>\n<xsl:when test=\"$dateTimeString!= '' and string-length($dateTimeString)>18 and string(number(substring($dateTimeString, 1, 4))) != 'NaN' \">\n<xsl:value-of select=\"concat(substring($dateTimeString, 9, 2), '.', substring($dateTimeString, 6, 2), '.', substring($dateTimeString, 1, 4),' ', substring($dateTimeString, 12, 2),':', substring($dateTimeString, 15, 2),':', substring($dateTimeString, 18, 2))\" />\n</xsl:when>\n<xsl:otherwise>\n<xsl:value-of select=\"$dateTimeString\"></xsl:value-of>\n</xsl:otherwise>\n</xsl:choose>\n</xsl:template>\n</xsl:stylesheet>\n"
          transformationOutputMimeType: text/plain
        payloadMimeType: application/xml

    XAdES-ASICE-Base64-HTML:
      value:
        document:
          content: "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48R2VuZXJhbEFnZW5kYSB4bWxucz0iaHR0cDovL3NjaGVtYXMuZ292LnNrL2Zvcm0vQXBwLkdlbmVyYWxBZ2VuZGEvMS45Ij4KICA8c3ViamVjdD5Ob3bDqSBwb2RhbmllPC9zdWJqZWN0PgogIDx0ZXh0PlBvZMOhdmFtIHRvdG8gbm92w6kgcG9kYW5pZS48L3RleHQ+CjwvR2VuZXJhbEFnZW5kYT4="
        parameters:
          format: XADES
          fileMimeType: application/lor.ip.xmldatacontainer+xml
          container: ASICE
          containerFilename: General_Agenda.xml
          containerXmlns: http://data.gov.sk/def/container/xmldatacontainer+xml/1.1
          schema: "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHhzOnNjaGVtYSBlbGVtZW50Rm9ybURlZmF1bHQ9InF1YWxpZmllZCIgYXR0cmlidXRlRm9ybURlZmF1bHQ9InVucXVhbGlmaWVkIiB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHRhcmdldE5hbWVzcGFjZT0iaHR0cDovL3NjaGVtYXMuZ292LnNrL2Zvcm0vQXBwLkdlbmVyYWxBZ2VuZGEvMS45IiB4bWxucz0iaHR0cDovL3NjaGVtYXMuZ292LnNrL2Zvcm0vQXBwLkdlbmVyYWxBZ2VuZGEvMS45Ij4KPHhzOnNpbXBsZVR5cGUgbmFtZT0idGV4dEFyZWEiPgo8eHM6cmVzdHJpY3Rpb24gYmFzZT0ieHM6c3RyaW5nIj4KPC94czpyZXN0cmljdGlvbj4KPC94czpzaW1wbGVUeXBlPgo8eHM6c2ltcGxlVHlwZSBuYW1lPSJtZW5vIj4KPHhzOnJlc3RyaWN0aW9uIGJhc2U9InhzOnN0cmluZyI+CjwveHM6cmVzdHJpY3Rpb24+CjwveHM6c2ltcGxlVHlwZT4KPHhzOmVsZW1lbnQgbmFtZT0iR2VuZXJhbEFnZW5kYSI+Cjx4czpjb21wbGV4VHlwZT4KPHhzOnNlcXVlbmNlPgo8eHM6ZWxlbWVudCBuYW1lPSJzdWJqZWN0IiB0eXBlPSJtZW5vIiBtaW5PY2N1cnM9IjAiIG5pbGxhYmxlPSJ0cnVlIiAvPgo8eHM6ZWxlbWVudCBuYW1lPSJ0ZXh0IiB0eXBlPSJ0ZXh0QXJlYSIgbWluT2NjdXJzPSIwIiBuaWxsYWJsZT0idHJ1ZSIgLz4KPC94czpzZXF1ZW5jZT4KPC94czpjb21wbGV4VHlwZT4KPC94czplbGVtZW50Pgo8L3hzOnNjaGVtYT4K"
          transformation: ""
          transformationOutputMimeType: text/html
        payloadMimeType: application/xml;base64

    XAdES-ASICE-Base64-TXT:
      value:
        document:
          content: "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48R2VuZXJhbEFnZW5kYSB4bWxucz0iaHR0cDovL3NjaGVtYXMuZ292LnNrL2Zvcm0vQXBwLkdlbmVyYWxBZ2VuZGEvMS45Ij4KICA8c3ViamVjdD5Ob3bDqSBwb2RhbmllPC9zdWJqZWN0PgogIDx0ZXh0PlBvZMOhdmFtIHRvdG8gbm92w6kgcG9kYW5pZS48L3RleHQ+CjwvR2VuZXJhbEFnZW5kYT4="
        parameters:
          format: XADES
          fileMimeType: application/lor.ip.xmldatacontainer+xml
          container: ASICE
          containerFilename: General_Agenda.xml
          containerXmlns: http://data.gov.sk/def/container/xmldatacontainer+xml/1.1
          schema: "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHhzOnNjaGVtYSBlbGVtZW50Rm9ybURlZmF1bHQ9InF1YWxpZmllZCIgYXR0cmlidXRlRm9ybURlZmF1bHQ9InVucXVhbGlmaWVkIiB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHRhcmdldE5hbWVzcGFjZT0iaHR0cDovL3NjaGVtYXMuZ292LnNrL2Zvcm0vQXBwLkdlbmVyYWxBZ2VuZGEvMS45IiB4bWxucz0iaHR0cDovL3NjaGVtYXMuZ292LnNrL2Zvcm0vQXBwLkdlbmVyYWxBZ2VuZGEvMS45Ij4KPHhzOnNpbXBsZVR5cGUgbmFtZT0idGV4dEFyZWEiPgo8eHM6cmVzdHJpY3Rpb24gYmFzZT0ieHM6c3RyaW5nIj4KPC94czpyZXN0cmljdGlvbj4KPC94czpzaW1wbGVUeXBlPgo8eHM6c2ltcGxlVHlwZSBuYW1lPSJtZW5vIj4KPHhzOnJlc3RyaWN0aW9uIGJhc2U9InhzOnN0cmluZyI+CjwveHM6cmVzdHJpY3Rpb24+CjwveHM6c2ltcGxlVHlwZT4KPHhzOmVsZW1lbnQgbmFtZT0iR2VuZXJhbEFnZW5kYSI+Cjx4czpjb21wbGV4VHlwZT4KPHhzOnNlcXVlbmNlPgo8eHM6ZWxlbWVudCBuYW1lPSJzdWJqZWN0IiB0eXBlPSJtZW5vIiBtaW5PY2N1cnM9IjAiIG5pbGxhYmxlPSJ0cnVlIiAvPgo8eHM6ZWxlbWVudCBuYW1lPSJ0ZXh0IiB0eXBlPSJ0ZXh0QXJlYSIgbWluT2NjdXJzPSIwIiBuaWxsYWJsZT0idHJ1ZSIgLz4KPC94czpzZXF1ZW5jZT4KPC94czpjb21wbGV4VHlwZT4KPC94czplbGVtZW50Pgo8L3hzOnNjaGVtYT4K"
          transformation: "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHhzbDpzdHlsZXNoZWV0IHZlcnNpb249IjEuMCIgeG1sbnM6eHNsPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L1hTTC9UcmFuc2Zvcm0iICB4bWxuczplZ29ucD0iaHR0cDovL3NjaGVtYXMuZ292LnNrL2Zvcm0vQXBwLkdlbmVyYWxBZ2VuZGEvMS45Ij4KPHhzbDpvdXRwdXQgbWV0aG9kPSJ0ZXh0IiBpbmRlbnQ9InllcyIgb21pdC14bWwtZGVjbGFyYXRpb249InllcyIvPgo8eHNsOnN0cmlwLXNwYWNlIGVsZW1lbnRzPSIqIiAvPgo8eHNsOnRlbXBsYXRlIG1hdGNoPSJlZ29ucDpHZW5lcmFsQWdlbmRhIj4KPHhzbDp0ZXh0PlbFoWVvYmVjbsOhIGFnZW5kYTwveHNsOnRleHQ+Cjx4c2w6YXBwbHktdGVtcGxhdGVzLz4KPC94c2w6dGVtcGxhdGU+Cjx4c2w6dGVtcGxhdGUgbWF0Y2g9ImVnb25wOkdlbmVyYWxBZ2VuZGEvZWdvbnA6c3ViamVjdCI+Cjx4c2w6aWYgdGVzdD0iLi90ZXh0KCkiPgo8eHNsOnRleHQ+JiN4QTs8L3hzbDp0ZXh0Pgo8eHNsOnRleHQ+JiMwOTs8L3hzbDp0ZXh0Pjx4c2w6dGV4dD5QcmVkbWV0OiA8L3hzbDp0ZXh0Pjx4c2w6Y2FsbC10ZW1wbGF0ZSBuYW1lPSJzdHJpbmctcmVwbGFjZS1hbGwiPjx4c2w6d2l0aC1wYXJhbSBuYW1lPSJ0ZXh0IiBzZWxlY3Q9Ii4iIC8+PHhzbDp3aXRoLXBhcmFtIG5hbWU9InJlcGxhY2UiIHNlbGVjdD0iJyYjMTA7JyIgLz48eHNsOndpdGgtcGFyYW0gbmFtZT0iYnkiIHNlbGVjdD0iJyYjMTM7JiMxMDsmIzA5OyciIC8+PC94c2w6Y2FsbC10ZW1wbGF0ZT4KPC94c2w6aWY+CjwveHNsOnRlbXBsYXRlPgo8eHNsOnRlbXBsYXRlIG1hdGNoPSJlZ29ucDpHZW5lcmFsQWdlbmRhL2Vnb25wOnRleHQiPgo8eHNsOmlmIHRlc3Q9Ii4vdGV4dCgpIj4KPHhzbDp0ZXh0PiYjeEE7PC94c2w6dGV4dD4KPHhzbDp0ZXh0PiYjMDk7PC94c2w6dGV4dD48eHNsOnRleHQ+VGV4dDogPC94c2w6dGV4dD48eHNsOmNhbGwtdGVtcGxhdGUgbmFtZT0ic3RyaW5nLXJlcGxhY2UtYWxsIj48eHNsOndpdGgtcGFyYW0gbmFtZT0idGV4dCIgc2VsZWN0PSIuIiAvPjx4c2w6d2l0aC1wYXJhbSBuYW1lPSJyZXBsYWNlIiBzZWxlY3Q9IicmIzEwOyciIC8+PHhzbDp3aXRoLXBhcmFtIG5hbWU9ImJ5IiBzZWxlY3Q9IicmIzEzOyYjMTA7JiMwOTsnIiAvPjwveHNsOmNhbGwtdGVtcGxhdGU+CjwveHNsOmlmPgo8L3hzbDp0ZW1wbGF0ZT4KPHhzbDp0ZW1wbGF0ZSBuYW1lPSJmb3JtYXRUb1NrRGF0ZSI+Cjx4c2w6cGFyYW0gbmFtZT0iZGF0ZSIgLz4KPHhzbDp2YXJpYWJsZSBuYW1lPSJkYXRlU3RyaW5nIiBzZWxlY3Q9InN0cmluZygkZGF0ZSkiIC8+Cjx4c2w6Y2hvb3NlPgo8eHNsOndoZW4gdGVzdD0iJGRhdGVTdHJpbmcgIT0gJycgYW5kIHN0cmluZy1sZW5ndGgoJGRhdGVTdHJpbmcpPTEwIGFuZCBzdHJpbmcobnVtYmVyKHN1YnN0cmluZygkZGF0ZVN0cmluZywgMSwgNCkpKSAhPSAnTmFOJyAiPgo8eHNsOnZhbHVlLW9mIHNlbGVjdD0iY29uY2F0KHN1YnN0cmluZygkZGF0ZVN0cmluZywgOSwgMiksICcuJywgc3Vic3RyaW5nKCRkYXRlU3RyaW5nLCA2LCAyKSwgJy4nLCBzdWJzdHJpbmcoJGRhdGVTdHJpbmcsIDEsIDQpKSIgLz4KPC94c2w6d2hlbj4KPHhzbDpvdGhlcndpc2U+Cjx4c2w6dmFsdWUtb2Ygc2VsZWN0PSIkZGF0ZVN0cmluZyI+PC94c2w6dmFsdWUtb2Y+CjwveHNsOm90aGVyd2lzZT4KPC94c2w6Y2hvb3NlPgo8L3hzbDp0ZW1wbGF0ZT4KPHhzbDp0ZW1wbGF0ZSBuYW1lPSJib29sZWFuQ2hlY2tib3hUb1N0cmluZyI+Cjx4c2w6cGFyYW0gbmFtZT0iYm9vbFZhbHVlIiAvPgo8eHNsOnZhcmlhYmxlIG5hbWU9ImJvb2xWYWx1ZVN0cmluZyIgc2VsZWN0PSJzdHJpbmcoJGJvb2xWYWx1ZSkiIC8+Cjx4c2w6Y2hvb3NlPgo8eHNsOndoZW4gdGVzdD0iJGJvb2xWYWx1ZVN0cmluZyA9ICd0cnVlJyAiPgo8eHNsOnRleHQ+w4FubzwveHNsOnRleHQ+CjwveHNsOndoZW4+Cjx4c2w6d2hlbiB0ZXN0PSIkYm9vbFZhbHVlU3RyaW5nID0gJ2ZhbHNlJyAiPgo8eHNsOnRleHQ+TmllPC94c2w6dGV4dD4KPC94c2w6d2hlbj4KPHhzbDp3aGVuIHRlc3Q9IiRib29sVmFsdWVTdHJpbmcgPSAnMScgIj4KPHhzbDp0ZXh0PsOBbm88L3hzbDp0ZXh0Pgo8L3hzbDp3aGVuPgo8eHNsOndoZW4gdGVzdD0iJGJvb2xWYWx1ZVN0cmluZyA9ICcwJyAiPgo8eHNsOnRleHQ+TmllPC94c2w6dGV4dD4KPC94c2w6d2hlbj4KPHhzbDpvdGhlcndpc2U+Cjx4c2w6dmFsdWUtb2Ygc2VsZWN0PSIkYm9vbFZhbHVlU3RyaW5nIj48L3hzbDp2YWx1ZS1vZj4KPC94c2w6b3RoZXJ3aXNlPgo8L3hzbDpjaG9vc2U+CjwveHNsOnRlbXBsYXRlPgo8eHNsOnRlbXBsYXRlIG5hbWU9ImZvcm1hdFRpbWVUcmltU2Vjb25kcyI+Cjx4c2w6cGFyYW0gbmFtZT0idGltZSIgLz4KPHhzbDp2YXJpYWJsZSBuYW1lPSJ0aW1lU3RyaW5nIiBzZWxlY3Q9InN0cmluZygkdGltZSkiIC8+Cjx4c2w6aWYgdGVzdD0iJHRpbWVTdHJpbmcgIT0gJyciPgo8eHNsOnZhbHVlLW9mIHNlbGVjdD0ic3Vic3RyaW5nKCR0aW1lU3RyaW5nLCAxLCA1KSIgLz4KPC94c2w6aWY+CjwveHNsOnRlbXBsYXRlPgo8eHNsOnRlbXBsYXRlIG5hbWU9ImZvcm1hdFRpbWUiPgo8eHNsOnBhcmFtIG5hbWU9InRpbWUiIC8+Cjx4c2w6dmFyaWFibGUgbmFtZT0idGltZVN0cmluZyIgc2VsZWN0PSJzdHJpbmcoJHRpbWUpIiAvPgo8eHNsOmlmIHRlc3Q9IiR0aW1lU3RyaW5nICE9ICcnIj4KPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9InN1YnN0cmluZygkdGltZVN0cmluZywgMSwgOCkiIC8+CjwveHNsOmlmPgo8L3hzbDp0ZW1wbGF0ZT4KPHhzbDp0ZW1wbGF0ZSBuYW1lPSJzdHJpbmctcmVwbGFjZS1hbGwiPgo8eHNsOnBhcmFtIG5hbWU9InRleHQiLz4KPHhzbDpwYXJhbSBuYW1lPSJyZXBsYWNlIi8+Cjx4c2w6cGFyYW0gbmFtZT0iYnkiLz4KPHhzbDpjaG9vc2U+Cjx4c2w6d2hlbiB0ZXN0PSJjb250YWlucygkdGV4dCwgJHJlcGxhY2UpIj4KPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9InN1YnN0cmluZy1iZWZvcmUoJHRleHQsJHJlcGxhY2UpIi8+Cjx4c2w6dmFsdWUtb2Ygc2VsZWN0PSIkYnkiLz4KPHhzbDpjYWxsLXRlbXBsYXRlIG5hbWU9InN0cmluZy1yZXBsYWNlLWFsbCI+Cjx4c2w6d2l0aC1wYXJhbSBuYW1lPSJ0ZXh0IiBzZWxlY3Q9InN1YnN0cmluZy1hZnRlcigkdGV4dCwkcmVwbGFjZSkiLz4KPHhzbDp3aXRoLXBhcmFtIG5hbWU9InJlcGxhY2UiIHNlbGVjdD0iJHJlcGxhY2UiLz4KPHhzbDp3aXRoLXBhcmFtIG5hbWU9ImJ5IiBzZWxlY3Q9IiRieSIgLz4KPC94c2w6Y2FsbC10ZW1wbGF0ZT4KPC94c2w6d2hlbj4KPHhzbDpvdGhlcndpc2U+Cjx4c2w6dmFsdWUtb2Ygc2VsZWN0PSIkdGV4dCIvPgo8L3hzbDpvdGhlcndpc2U+CjwveHNsOmNob29zZT4KPC94c2w6dGVtcGxhdGU+Cjx4c2w6dGVtcGxhdGUgbmFtZT0iZm9ybWF0VG9Ta0RhdGVUaW1lIj4KPHhzbDpwYXJhbSBuYW1lPSJkYXRlVGltZSIgLz4KPHhzbDp2YXJpYWJsZSBuYW1lPSJkYXRlVGltZVN0cmluZyIgc2VsZWN0PSJzdHJpbmcoJGRhdGVUaW1lKSIgLz4KPHhzbDpjaG9vc2U+Cjx4c2w6d2hlbiB0ZXN0PSIkZGF0ZVRpbWVTdHJpbmchPSAnJyBhbmQgc3RyaW5nLWxlbmd0aCgkZGF0ZVRpbWVTdHJpbmcpPjE4IGFuZCBzdHJpbmcobnVtYmVyKHN1YnN0cmluZygkZGF0ZVRpbWVTdHJpbmcsIDEsIDQpKSkgIT0gJ05hTicgIj4KPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9ImNvbmNhdChzdWJzdHJpbmcoJGRhdGVUaW1lU3RyaW5nLCA5LCAyKSwgJy4nLCBzdWJzdHJpbmcoJGRhdGVUaW1lU3RyaW5nLCA2LCAyKSwgJy4nLCBzdWJzdHJpbmcoJGRhdGVUaW1lU3RyaW5nLCAxLCA0KSwnICcsIHN1YnN0cmluZygkZGF0ZVRpbWVTdHJpbmcsIDEyLCAyKSwnOicsIHN1YnN0cmluZygkZGF0ZVRpbWVTdHJpbmcsIDE1LCAyKSkiIC8+CjwveHNsOndoZW4+Cjx4c2w6b3RoZXJ3aXNlPgo8eHNsOnZhbHVlLW9mIHNlbGVjdD0iJGRhdGVUaW1lU3RyaW5nIj48L3hzbDp2YWx1ZS1vZj4KPC94c2w6b3RoZXJ3aXNlPgo8L3hzbDpjaG9vc2U+CjwveHNsOnRlbXBsYXRlPgo8eHNsOnRlbXBsYXRlIG5hbWU9ImZvcm1hdFRvU2tEYXRlVGltZVNlY29uZCI+Cjx4c2w6cGFyYW0gbmFtZT0iZGF0ZVRpbWUiIC8+Cjx4c2w6dmFyaWFibGUgbmFtZT0iZGF0ZVRpbWVTdHJpbmciIHNlbGVjdD0ic3RyaW5nKCRkYXRlVGltZSkiIC8+Cjx4c2w6Y2hvb3NlPgo8eHNsOndoZW4gdGVzdD0iJGRhdGVUaW1lU3RyaW5nIT0gJycgYW5kIHN0cmluZy1sZW5ndGgoJGRhdGVUaW1lU3RyaW5nKT4xOCBhbmQgc3RyaW5nKG51bWJlcihzdWJzdHJpbmcoJGRhdGVUaW1lU3RyaW5nLCAxLCA0KSkpICE9ICdOYU4nICI+Cjx4c2w6dmFsdWUtb2Ygc2VsZWN0PSJjb25jYXQoc3Vic3RyaW5nKCRkYXRlVGltZVN0cmluZywgOSwgMiksICcuJywgc3Vic3RyaW5nKCRkYXRlVGltZVN0cmluZywgNiwgMiksICcuJywgc3Vic3RyaW5nKCRkYXRlVGltZVN0cmluZywgMSwgNCksJyAnLCBzdWJzdHJpbmcoJGRhdGVUaW1lU3RyaW5nLCAxMiwgMiksJzonLCBzdWJzdHJpbmcoJGRhdGVUaW1lU3RyaW5nLCAxNSwgMiksJzonLCBzdWJzdHJpbmcoJGRhdGVUaW1lU3RyaW5nLCAxOCwgMikpIiAvPgo8L3hzbDp3aGVuPgo8eHNsOm90aGVyd2lzZT4KPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9IiRkYXRlVGltZVN0cmluZyI+PC94c2w6dmFsdWUtb2Y+CjwveHNsOm90aGVyd2lzZT4KPC94c2w6Y2hvb3NlPgo8L3hzbDp0ZW1wbGF0ZT4KPC94c2w6c3R5bGVzaGVldD4K"
          transformationOutputMimeType: text/plain
        payloadMimeType: application/xml;base64

    XAdES-ASICE-TXT-HTML:
      value:
        document:
          content: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><GeneralAgenda xmlns=\"http://schemas.gov.sk/form/App.GeneralAgenda/1.9\">\n  <subject>Nové podanie</subject>\n  <text>Podávam toto nové podanie.</text>\n</GeneralAgenda>"
        parameters:
          format: XADES
          fileMimeType: application/lor.ip.xmldatacontainer+xml
          container: ASICE
          containerFilename: General_Agenda.xml
          containerXmlns: http://data.gov.sk/def/container/xmldatacontainer+xml/1.1
          schema: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" targetNamespace=\"http://schemas.gov.sk/form/App.GeneralAgenda/1.9\" xmlns=\"http://schemas.gov.sk/form/App.GeneralAgenda/1.9\">\n<xs:simpleType name=\"textArea\">\n<xs:restriction base=\"xs:string\">\n</xs:restriction>\n</xs:simpleType>\n<xs:simpleType name=\"meno\">\n<xs:restriction base=\"xs:string\">\n</xs:restriction>\n</xs:simpleType>\n<xs:element name=\"GeneralAgenda\">\n<xs:complexType>\n<xs:sequence>\n<xs:element name=\"subject\" type=\"meno\" minOccurs=\"0\" nillable=\"true\" />\n<xs:element name=\"text\" type=\"textArea\" minOccurs=\"0\" nillable=\"true\" />\n</xs:sequence>\n</xs:complexType>\n</xs:element>\n</xs:schema>\n"
          transformation: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<xsl:stylesheet version=\"1.0\"  xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"  xmlns:egonp=\"http://schemas.gov.sk/form/App.GeneralAgenda/1.9\" exclude-result-prefixes=\"egonp\">\r\n<xsl:output method=\"html\" doctype-system=\"http://www.w3.org/TR/html4/strict.dtd\" doctype-public=\"-//W3C//DTD HTML 4.01//EN\" indent=\"no\" omit-xml-declaration=\"yes\"/>\r\n<xsl:template match=\"/\">\r\n<html>\r\n<head>\r\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=8\" />\r\n<title>Všeobecná agenda</title>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"/>\r\n<meta name=\"language\" content=\"sk-SK\"/>\r\n<style type=\"text/css\">\r\nbody { \r\n\tfont-family: 'Open Sans', 'Segoe UI', 'Trebuchet MS', 'Geneva CE', lucida, sans-serif;\r\n\tbackground : #ffffff !important ;\r\n}\r\n.ui-tabs {\r\n\tpadding: .2em;\r\n\tposition: relative;\r\n\tzoom: 1;\r\n}\t\t\t\t\t\t\t\t\r\n.clear { clear: both; height: 0;}\r\n.layoutMain {\r\n\tmargin: 0px auto;\r\n\tpadding: 5px 5px 5px 5px;\t\r\n}\t\t\t\t\r\n.layoutRow { margin-bottom: 5px; }\t\t\t\t\r\n.caption { /*width: 100%; border-bottom: solid 1px black;*/ }\r\n.nocaption &gt; .caption { border: 0px !important; }\r\n.nocaption &gt; .caption span {\r\n\tbackground: none !important;\r\n\tdisplay: none;\r\n} \r\n.caption .title { padding-left: 5px; }\r\n.headercorrection {\t\r\n\tmargin: 0px;\r\n    font-size : 1em;\r\n    font-weight: bold;\r\n}\t\t\t\t\r\n.labelVis {\r\n\tfloat: left;\r\n\tfont-weight: bold;\r\n\tfont-family: 'Open Sans', 'Segoe UI', 'Trebuchet MS', 'Geneva CE', lucida, sans-serif;\r\n\tline-height: 25px;\r\n\tmargin: 0px 18px 0px 0px;\r\n\tpadding-left: 3px;\r\n\twidth: 190px;\r\n\tword-wrap: break-word;\r\n    font-size: 0.8em;\r\n}\r\n.contentVis {    \t     \r\n\tfloat: left;\t\r\n\tline-height: 25px;\r\n\tmargin: 0px;\r\n\tpadding: 0px;\r\n\tvertical-align: top;\r\n    font-size: 0.75em;\t\t\t\r\n}\r\n.wordwrap { \r\n    white-space: pre-wrap;      \r\n    white-space: -moz-pre-wrap; \r\n    white-space: -pre-wrap;     \r\n    white-space: -o-pre-wrap;   \r\n    word-wrap: break-word;      \r\n}\t\r\n.ui-widget-content {\r\n\tbackground : 50% 50% repeat-x #ffffff;\r\n\tborder : #d4d4d4 solid 2px;\r\n\tcolor : #4f4e4e;\r\n\tborder-radius : 3px;\r\n}\r\n.ui-widget-header {\r\n\tcursor : pointer;\r\n\tfont-size : 0.8em;\r\n\tcolor : #494949;\r\n\tpadding-left : 2px;\r\n\tborder : #eae9e8 solid 1px;\r\n\tbackground-color : #eae9e8;\r\n\tmargin-bottom: 3px;\r\n\tborder-radius : 3px;\r\n}\t\t\t\r\n</style>\r\n</head>\r\n<body>\r\n<div id=\"main\" class=\"layoutMain\">\r\n<xsl:apply-templates/>\r\n</div>\r\n</body>\r\n</html>\r\n</xsl:template>\r\n<xsl:template match=\"/egonp:GeneralAgenda\">\r\n<div class=\"layoutRow ui-tabs ui-widget-content\" >\r\n<div class=\"caption ui-widget-header\">\r\n<div class=\"headercorrection\">Všeobecná agenda</div>\r\n</div>\r\n<xsl:apply-templates select=\"./egonp:subject\"/>\r\n<xsl:apply-templates select=\"./egonp:text\"/>\r\n</div>\r\n</xsl:template>\r\n<xsl:template match=\"egonp:GeneralAgenda/egonp:subject\">\r\n<xsl:if test=\"./text()\">\r\n<div><label class=\"labelVis\">Predmet: </label><span class=\"contentVis wordwrap\"><xsl:call-template name=\"string-replace-all\"><xsl:with-param name=\"text\" select=\".\" /><xsl:with-param name=\"replace\" select=\"'%0A'\" /><xsl:with-param name=\"by\" select=\"'&#13;&#10;'\" /></xsl:call-template></span></div><div class=\"clear\">&#xa0;</div></xsl:if>\r\n</xsl:template>\r\n<xsl:template match=\"egonp:GeneralAgenda/egonp:text\">\r\n<xsl:if test=\"./text()\">\r\n<div><label class=\"labelVis\">Text: </label><span class=\"contentVis wordwrap\"><xsl:call-template name=\"string-replace-all\"><xsl:with-param name=\"text\" select=\".\" /><xsl:with-param name=\"replace\" select=\"'%0A'\" /><xsl:with-param name=\"by\" select=\"'&#13;&#10;'\" /></xsl:call-template></span></div><div class=\"clear\">&#xa0;</div></xsl:if>\r\n</xsl:template>\r\n<xsl:template name=\"formatToSkDate\">\r\n<xsl:param name=\"date\" />\r\n<xsl:variable name=\"dateString\" select=\"string($date)\" />\r\n<xsl:choose>\r\n<xsl:when test=\"$dateString != '' and string-length($dateString)=10 and string(number(substring($dateString, 1, 4))) != 'NaN' \">\r\n<xsl:value-of select=\"concat(substring($dateString, 9, 2), '.', substring($dateString, 6, 2), '.', substring($dateString, 1, 4))\" />\r\n</xsl:when>\r\n<xsl:otherwise>\r\n<xsl:value-of select=\"$dateString\"></xsl:value-of>\r\n</xsl:otherwise>\r\n</xsl:choose>\r\n</xsl:template>\r\n<xsl:template name=\"booleanCheckboxToString\">\r\n<xsl:param name=\"boolValue\" />\r\n<xsl:variable name=\"boolValueString\" select=\"string($boolValue)\" />\r\n<xsl:choose>\r\n<xsl:when test=\"$boolValueString = 'true' \">\r\n<xsl:text>Áno</xsl:text>\r\n</xsl:when>\r\n<xsl:when test=\"$boolValueString = 'false' \">\r\n<xsl:text>Nie</xsl:text>\r\n</xsl:when>\r\n<xsl:when test=\"$boolValueString = '1' \">\r\n<xsl:text>Áno</xsl:text>\r\n</xsl:when>\r\n<xsl:when test=\"$boolValueString = '0' \">\r\n<xsl:text>Nie</xsl:text>\r\n</xsl:when>\r\n<xsl:otherwise>\r\n<xsl:value-of select=\"$boolValueString\"></xsl:value-of>\r\n</xsl:otherwise>\r\n</xsl:choose>\r\n</xsl:template>\r\n<xsl:template name=\"formatTimeTrimSeconds\">\r\n<xsl:param name=\"time\" />\r\n<xsl:variable name=\"timeString\" select=\"string($time)\" />\r\n<xsl:if test=\"$timeString != ''\">\r\n<xsl:value-of select=\"substring($timeString, 1, 5)\" />\r\n</xsl:if>\r\n</xsl:template>\r\n<xsl:template name=\"formatTime\">\r\n<xsl:param name=\"time\" />\r\n<xsl:variable name=\"timeString\" select=\"string($time)\" />\r\n<xsl:if test=\"$timeString != ''\">\r\n<xsl:value-of select=\"substring($timeString, 1, 8)\" />\r\n</xsl:if>\r\n</xsl:template>\r\n<xsl:template name=\"string-replace-all\">\r\n<xsl:param name=\"text\"/>\r\n<xsl:param name=\"replace\"/>\r\n<xsl:param name=\"by\"/>\r\n<xsl:choose>\r\n<xsl:when test=\"contains($text, $replace)\">\r\n<xsl:value-of select=\"substring-before($text,$replace)\"/>\r\n<xsl:value-of select=\"$by\"/>\r\n<xsl:call-template name=\"string-replace-all\">\r\n<xsl:with-param name=\"text\" select=\"substring-after($text,$replace)\"/>\r\n<xsl:with-param name=\"replace\" select=\"$replace\"/>\r\n<xsl:with-param name=\"by\" select=\"$by\" />\r\n</xsl:call-template>\r\n</xsl:when>\r\n<xsl:otherwise>\r\n<xsl:value-of select=\"$text\"/>\r\n</xsl:otherwise>\r\n</xsl:choose>\r\n</xsl:template>\r\n<xsl:template name=\"formatToSkDateTime\">\r\n<xsl:param name=\"dateTime\" />\r\n<xsl:variable name=\"dateTimeString\" select=\"string($dateTime)\" />\r\n<xsl:choose>\r\n<xsl:when test=\"$dateTimeString!= '' and string-length($dateTimeString)>18 and string(number(substring($dateTimeString, 1, 4))) != 'NaN' \">\r\n<xsl:value-of select=\"concat(substring($dateTimeString, 9, 2), '.', substring($dateTimeString, 6, 2), '.', substring($dateTimeString, 1, 4),' ', substring($dateTimeString, 12, 2),':', substring($dateTimeString, 15, 2))\" />\r\n</xsl:when>\r\n<xsl:otherwise>\r\n<xsl:value-of select=\"$dateTimeString\"></xsl:value-of>\r\n</xsl:otherwise>\r\n</xsl:choose>\r\n</xsl:template>\r\n<xsl:template name=\"formatToSkDateTimeSecond\">\r\n<xsl:param name=\"dateTime\" />\r\n<xsl:variable name=\"dateTimeString\" select=\"string($dateTime)\" />\r\n<xsl:choose>\r\n<xsl:when test=\"$dateTimeString!= '' and string-length($dateTimeString)>18 and string(number(substring($dateTimeString, 1, 4))) != 'NaN' \">\r\n<xsl:value-of select=\"concat(substring($dateTimeString, 9, 2), '.', substring($dateTimeString, 6, 2), '.', substring($dateTimeString, 1, 4),' ', substring($dateTimeString, 12, 2),':', substring($dateTimeString, 15, 2),':', substring($dateTimeString, 18, 2))\" />\r\n</xsl:when>\r\n<xsl:otherwise>\r\n<xsl:value-of select=\"$dateTimeString\"></xsl:value-of>\r\n</xsl:otherwise>\r\n</xsl:choose>\r\n</xsl:template>\r\n</xsl:stylesheet>\r\n\r\n"
          transformationOutputMimeType: text/html
        payloadMimeType: application/xml

    XAdES-ASICE-TXT-TXT:
      value:
        document:
          content: "<?xml version=\"1.0\"encoding=\"UTF-8\"?><GeneralAgenda xmlns=\"http://schemas.gov.sk/form/App.GeneralAgenda/1.9\">\n  <subject>Nové podanie</subject>\n  <text>Podávam toto nové podanie.</text>\n</GeneralAgenda>"
        parameters:
          format: XADES
          fileMimeType: application/lor.ip.xmldatacontainer+xml
          container: ASICE
          containerFilename: General_Agenda.xml
          containerXmlns: http://data.gov.sk/def/container/xmldatacontainer+xml/1.1
          schema: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" targetNamespace=\"http://schemas.gov.sk/form/App.GeneralAgenda/1.9\" xmlns=\"http://schemas.gov.sk/form/App.GeneralAgenda/1.9\">\n<xs:simpleType name=\"textArea\">\n<xs:restriction base=\"xs:string\">\n</xs:restriction>\n</xs:simpleType>\n<xs:simpleType name=\"meno\">\n<xs:restriction base=\"xs:string\">\n</xs:restriction>\n</xs:simpleType>\n<xs:element name=\"GeneralAgenda\">\n<xs:complexType>\n<xs:sequence>\n<xs:element name=\"subject\" type=\"meno\" minOccurs=\"0\" nillable=\"true\" />\n<xs:element name=\"text\" type=\"textArea\" minOccurs=\"0\" nillable=\"true\" />\n</xs:sequence>\n</xs:complexType>\n</xs:element>\n</xs:schema>\n"
          transformation: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"  xmlns:egonp=\"http://schemas.gov.sk/form/App.GeneralAgenda/1.9\">\n<xsl:output method=\"text\" indent=\"yes\" omit-xml-declaration=\"yes\"/>\n<xsl:strip-space elements=\"*\" />\n<xsl:template match=\"egonp:GeneralAgenda\">\n<xsl:text>Všeobecná agenda</xsl:text>\n<xsl:apply-templates/>\n</xsl:template>\n<xsl:template match=\"egonp:GeneralAgenda/egonp:subject\">\n<xsl:if test=\"./text()\">\n<xsl:text>&#xA;</xsl:text>\n<xsl:text>&#09;</xsl:text><xsl:text>Predmet: </xsl:text><xsl:call-template name=\"string-replace-all\"><xsl:with-param name=\"text\" select=\".\" /><xsl:with-param name=\"replace\" select=\"'&#10;'\" /><xsl:with-param name=\"by\" select=\"'&#13;&#10;&#09;'\" /></xsl:call-template>\n</xsl:if>\n</xsl:template>\n<xsl:template match=\"egonp:GeneralAgenda/egonp:text\">\n<xsl:if test=\"./text()\">\n<xsl:text>&#xA;</xsl:text>\n<xsl:text>&#09;</xsl:text><xsl:text>Text: </xsl:text><xsl:call-template name=\"string-replace-all\"><xsl:with-param name=\"text\" select=\".\" /><xsl:with-param name=\"replace\" select=\"'&#10;'\" /><xsl:with-param name=\"by\" select=\"'&#13;&#10;&#09;'\" /></xsl:call-template>\n</xsl:if>\n</xsl:template>\n<xsl:template name=\"formatToSkDate\">\n<xsl:param name=\"date\" />\n<xsl:variable name=\"dateString\" select=\"string($date)\" />\n<xsl:choose>\n<xsl:when test=\"$dateString != '' and string-length($dateString)=10 and string(number(substring($dateString, 1, 4))) != 'NaN' \">\n<xsl:value-of select=\"concat(substring($dateString, 9, 2), '.', substring($dateString, 6, 2), '.', substring($dateString, 1, 4))\" />\n</xsl:when>\n<xsl:otherwise>\n<xsl:value-of select=\"$dateString\"></xsl:value-of>\n</xsl:otherwise>\n</xsl:choose>\n</xsl:template>\n<xsl:template name=\"booleanCheckboxToString\">\n<xsl:param name=\"boolValue\" />\n<xsl:variable name=\"boolValueString\" select=\"string($boolValue)\" />\n<xsl:choose>\n<xsl:when test=\"$boolValueString = 'true' \">\n<xsl:text>Áno</xsl:text>\n</xsl:when>\n<xsl:when test=\"$boolValueString = 'false' \">\n<xsl:text>Nie</xsl:text>\n</xsl:when>\n<xsl:when test=\"$boolValueString = '1' \">\n<xsl:text>Áno</xsl:text>\n</xsl:when>\n<xsl:when test=\"$boolValueString = '0' \">\n<xsl:text>Nie</xsl:text>\n</xsl:when>\n<xsl:otherwise>\n<xsl:value-of select=\"$boolValueString\"></xsl:value-of>\n</xsl:otherwise>\n</xsl:choose>\n</xsl:template>\n<xsl:template name=\"formatTimeTrimSeconds\">\n<xsl:param name=\"time\" />\n<xsl:variable name=\"timeString\" select=\"string($time)\" />\n<xsl:if test=\"$timeString != ''\">\n<xsl:value-of select=\"substring($timeString, 1, 5)\" />\n</xsl:if>\n</xsl:template>\n<xsl:template name=\"formatTime\">\n<xsl:param name=\"time\" />\n<xsl:variable name=\"timeString\" select=\"string($time)\" />\n<xsl:if test=\"$timeString != ''\">\n<xsl:value-of select=\"substring($timeString, 1, 8)\" />\n</xsl:if>\n</xsl:template>\n<xsl:template name=\"string-replace-all\">\n<xsl:param name=\"text\"/>\n<xsl:param name=\"replace\"/>\n<xsl:param name=\"by\"/>\n<xsl:choose>\n<xsl:when test=\"contains($text, $replace)\">\n<xsl:value-of select=\"substring-before($text,$replace)\"/>\n<xsl:value-of select=\"$by\"/>\n<xsl:call-template name=\"string-replace-all\">\n<xsl:with-param name=\"text\" select=\"substring-after($text,$replace)\"/>\n<xsl:with-param name=\"replace\" select=\"$replace\"/>\n<xsl:with-param name=\"by\" select=\"$by\" />\n</xsl:call-template>\n</xsl:when>\n<xsl:otherwise>\n<xsl:value-of select=\"$text\"/>\n</xsl:otherwise>\n</xsl:choose>\n</xsl:template>\n<xsl:template name=\"formatToSkDateTime\">\n<xsl:param name=\"dateTime\" />\n<xsl:variable name=\"dateTimeString\" select=\"string($dateTime)\" />\n<xsl:choose>\n<xsl:when test=\"$dateTimeString!= '' and string-length($dateTimeString)>18 and string(number(substring($dateTimeString, 1, 4))) != 'NaN' \">\n<xsl:value-of select=\"concat(substring($dateTimeString, 9, 2), '.', substring($dateTimeString, 6, 2), '.', substring($dateTimeString, 1, 4),' ', substring($dateTimeString, 12, 2),':', substring($dateTimeString, 15, 2))\" />\n</xsl:when>\n<xsl:otherwise>\n<xsl:value-of select=\"$dateTimeString\"></xsl:value-of>\n</xsl:otherwise>\n</xsl:choose>\n</xsl:template>\n<xsl:template name=\"formatToSkDateTimeSecond\">\n<xsl:param name=\"dateTime\" />\n<xsl:variable name=\"dateTimeString\" select=\"string($dateTime)\" />\n<xsl:choose>\n<xsl:when test=\"$dateTimeString!= '' and string-length($dateTimeString)>18 and string(number(substring($dateTimeString, 1, 4))) != 'NaN' \">\n<xsl:value-of select=\"concat(substring($dateTimeString, 9, 2), '.', substring($dateTimeString, 6, 2), '.', substring($dateTimeString, 1, 4),' ', substring($dateTimeString, 12, 2),':', substring($dateTimeString, 15, 2),':', substring($dateTimeString, 18, 2))\" />\n</xsl:when>\n<xsl:otherwise>\n<xsl:value-of select=\"$dateTimeString\"></xsl:value-of>\n</xsl:otherwise>\n</xsl:choose>\n</xsl:template>\n</xsl:stylesheet>\n"
          transformationOutputMimeType: text/plain
        payloadMimeType: application/xml

    PAdES:
      value:
        document:
          content: ''
        parameters:
          format: PADES
        payloadMimeType: application/pdf;base64


    XmlContentAsPlaintext:
      value: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><GeneralAgenda xmlns=\"http://schemas.gov.sk/form/App.GeneralAgenda/1.9\">\n  <subject>Nové podanie</subject>\n  <text>Podávam toto nové podanie.</text>\n</GeneralAgenda>"

    XmlSchemaAsPlaintext:
      value: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" targetNamespace=\"http://schemas.gov.sk/form/App.GeneralAgenda/1.9\" xmlns=\"http://schemas.gov.sk/form/App.GeneralAgenda/1.9\">\n<xs:simpleType name=\"textArea\">\n<xs:restriction base=\"xs:string\">\n</xs:restriction>\n</xs:simpleType>\n<xs:simpleType name=\"meno\">\n<xs:restriction base=\"xs:string\">\n</xs:restriction>\n</xs:simpleType>\n<xs:element name=\"GeneralAgenda\">\n<xs:complexType>\n<xs:sequence>\n<xs:element name=\"subject\" type=\"meno\" minOccurs=\"0\" nillable=\"true\" />\n<xs:element name=\"text\" type=\"textArea\" minOccurs=\"0\" nillable=\"true\" />\n</xs:sequence>\n</xs:complexType>\n</xs:element>\n</xs:schema>\n"

    XmlTransformationToHtmlAsPlaintext:
      value: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"  xmlns:egonp=\"http://schemas.gov.sk/form/App.GeneralAgenda/1.9\">\n<xsl:output method=\"text\" indent=\"yes\" omit-xml-declaration=\"yes\"/>\n<xsl:strip-space elements=\"*\" />\n<xsl:template match=\"egonp:GeneralAgenda\">\n<xsl:text>Všeobecná agenda</xsl:text>\n<xsl:apply-templates/>\n</xsl:template>\n<xsl:template match=\"egonp:GeneralAgenda/egonp:subject\">\n<xsl:if test=\"./text()\">\n<xsl:text>&#xA;</xsl:text>\n<xsl:text>&#09;</xsl:text><xsl:text>Predmet: </xsl:text><xsl:call-template name=\"string-replace-all\"><xsl:with-param name=\"text\" select=\".\" /><xsl:with-param name=\"replace\" select=\"'&#10;'\" /><xsl:with-param name=\"by\" select=\"'&#13;&#10;&#09;'\" /></xsl:call-template>\n</xsl:if>\n</xsl:template>\n<xsl:template match=\"egonp:GeneralAgenda/egonp:text\">\n<xsl:if test=\"./text()\">\n<xsl:text>&#xA;</xsl:text>\n<xsl:text>&#09;</xsl:text><xsl:text>Text: </xsl:text><xsl:call-template name=\"string-replace-all\"><xsl:with-param name=\"text\" select=\".\" /><xsl:with-param name=\"replace\" select=\"'&#10;'\" /><xsl:with-param name=\"by\" select=\"'&#13;&#10;&#09;'\" /></xsl:call-template>\n</xsl:if>\n</xsl:template>\n<xsl:template name=\"formatToSkDate\">\n<xsl:param name=\"date\" />\n<xsl:variable name=\"dateString\" select=\"string($date)\" />\n<xsl:choose>\n<xsl:when test=\"$dateString != '' and string-length($dateString)=10 and string(number(substring($dateString, 1, 4))) != 'NaN' \">\n<xsl:value-of select=\"concat(substring($dateString, 9, 2), '.', substring($dateString, 6, 2), '.', substring($dateString, 1, 4))\" />\n</xsl:when>\n<xsl:otherwise>\n<xsl:value-of select=\"$dateString\"></xsl:value-of>\n</xsl:otherwise>\n</xsl:choose>\n</xsl:template>\n<xsl:template name=\"booleanCheckboxToString\">\n<xsl:param name=\"boolValue\" />\n<xsl:variable name=\"boolValueString\" select=\"string($boolValue)\" />\n<xsl:choose>\n<xsl:when test=\"$boolValueString = 'true' \">\n<xsl:text>Áno</xsl:text>\n</xsl:when>\n<xsl:when test=\"$boolValueString = 'false' \">\n<xsl:text>Nie</xsl:text>\n</xsl:when>\n<xsl:when test=\"$boolValueString = '1' \">\n<xsl:text>Áno</xsl:text>\n</xsl:when>\n<xsl:when test=\"$boolValueString = '0' \">\n<xsl:text>Nie</xsl:text>\n</xsl:when>\n<xsl:otherwise>\n<xsl:value-of select=\"$boolValueString\"></xsl:value-of>\n</xsl:otherwise>\n</xsl:choose>\n</xsl:template>\n<xsl:template name=\"formatTimeTrimSeconds\">\n<xsl:param name=\"time\" />\n<xsl:variable name=\"timeString\" select=\"string($time)\" />\n<xsl:if test=\"$timeString != ''\">\n<xsl:value-of select=\"substring($timeString, 1, 5)\" />\n</xsl:if>\n</xsl:template>\n<xsl:template name=\"formatTime\">\n<xsl:param name=\"time\" />\n<xsl:variable name=\"timeString\" select=\"string($time)\" />\n<xsl:if test=\"$timeString != ''\">\n<xsl:value-of select=\"substring($timeString, 1, 8)\" />\n</xsl:if>\n</xsl:template>\n<xsl:template name=\"string-replace-all\">\n<xsl:param name=\"text\"/>\n<xsl:param name=\"replace\"/>\n<xsl:param name=\"by\"/>\n<xsl:choose>\n<xsl:when test=\"contains($text, $replace)\">\n<xsl:value-of select=\"substring-before($text,$replace)\"/>\n<xsl:value-of select=\"$by\"/>\n<xsl:call-template name=\"string-replace-all\">\n<xsl:with-param name=\"text\" select=\"substring-after($text,$replace)\"/>\n<xsl:with-param name=\"replace\" select=\"$replace\"/>\n<xsl:with-param name=\"by\" select=\"$by\" />\n</xsl:call-template>\n</xsl:when>\n<xsl:otherwise>\n<xsl:value-of select=\"$text\"/>\n</xsl:otherwise>\n</xsl:choose>\n</xsl:template>\n<xsl:template name=\"formatToSkDateTime\">\n<xsl:param name=\"dateTime\" />\n<xsl:variable name=\"dateTimeString\" select=\"string($dateTime)\" />\n<xsl:choose>\n<xsl:when test=\"$dateTimeString!= '' and string-length($dateTimeString)>18 and string(number(substring($dateTimeString, 1, 4))) != 'NaN' \">\n<xsl:value-of select=\"concat(substring($dateTimeString, 9, 2), '.', substring($dateTimeString, 6, 2), '.', substring($dateTimeString, 1, 4),' ', substring($dateTimeString, 12, 2),':', substring($dateTimeString, 15, 2))\" />\n</xsl:when>\n<xsl:otherwise>\n<xsl:value-of select=\"$dateTimeString\"></xsl:value-of>\n</xsl:otherwise>\n</xsl:choose>\n</xsl:template>\n<xsl:template name=\"formatToSkDateTimeSecond\">\n<xsl:param name=\"dateTime\" />\n<xsl:variable name=\"dateTimeString\" select=\"string($dateTime)\" />\n<xsl:choose>\n<xsl:when test=\"$dateTimeString!= '' and string-length($dateTimeString)>18 and string(number(substring($dateTimeString, 1, 4))) != 'NaN' \">\n<xsl:value-of select=\"concat(substring($dateTimeString, 9, 2), '.', substring($dateTimeString, 6, 2), '.', substring($dateTimeString, 1, 4),' ', substring($dateTimeString, 12, 2),':', substring($dateTimeString, 15, 2),':', substring($dateTimeString, 18, 2))\" />\n</xsl:when>\n<xsl:otherwise>\n<xsl:value-of select=\"$dateTimeString\"></xsl:value-of>\n</xsl:otherwise>\n</xsl:choose>\n</xsl:template>\n</xsl:stylesheet>\n"

    XmlTransformationToPlaintextAsPlaintext:
      value: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"  xmlns:egonp=\"http://schemas.gov.sk/form/App.GeneralAgenda/1.9\">\n<xsl:output method=\"text\" indent=\"yes\" omit-xml-declaration=\"yes\"/>\n<xsl:strip-space elements=\"*\" />\n<xsl:template match=\"egonp:GeneralAgenda\">\n<xsl:text>Všeobecná agenda</xsl:text>\n<xsl:apply-templates/>\n</xsl:template>\n<xsl:template match=\"egonp:GeneralAgenda/egonp:subject\">\n<xsl:if test=\"./text()\">\n<xsl:text>&#xA;</xsl:text>\n<xsl:text>&#09;</xsl:text><xsl:text>Predmet: </xsl:text><xsl:call-template name=\"string-replace-all\"><xsl:with-param name=\"text\" select=\".\" /><xsl:with-param name=\"replace\" select=\"'&#10;'\" /><xsl:with-param name=\"by\" select=\"'&#13;&#10;&#09;'\" /></xsl:call-template>\n</xsl:if>\n</xsl:template>\n<xsl:template match=\"egonp:GeneralAgenda/egonp:text\">\n<xsl:if test=\"./text()\">\n<xsl:text>&#xA;</xsl:text>\n<xsl:text>&#09;</xsl:text><xsl:text>Text: </xsl:text><xsl:call-template name=\"string-replace-all\"><xsl:with-param name=\"text\" select=\".\" /><xsl:with-param name=\"replace\" select=\"'&#10;'\" /><xsl:with-param name=\"by\" select=\"'&#13;&#10;&#09;'\" /></xsl:call-template>\n</xsl:if>\n</xsl:template>\n<xsl:template name=\"formatToSkDate\">\n<xsl:param name=\"date\" />\n<xsl:variable name=\"dateString\" select=\"string($date)\" />\n<xsl:choose>\n<xsl:when test=\"$dateString != '' and string-length($dateString)=10 and string(number(substring($dateString, 1, 4))) != 'NaN' \">\n<xsl:value-of select=\"concat(substring($dateString, 9, 2), '.', substring($dateString, 6, 2), '.', substring($dateString, 1, 4))\" />\n</xsl:when>\n<xsl:otherwise>\n<xsl:value-of select=\"$dateString\"></xsl:value-of>\n</xsl:otherwise>\n</xsl:choose>\n</xsl:template>\n<xsl:template name=\"booleanCheckboxToString\">\n<xsl:param name=\"boolValue\" />\n<xsl:variable name=\"boolValueString\" select=\"string($boolValue)\" />\n<xsl:choose>\n<xsl:when test=\"$boolValueString = 'true' \">\n<xsl:text>Áno</xsl:text>\n</xsl:when>\n<xsl:when test=\"$boolValueString = 'false' \">\n<xsl:text>Nie</xsl:text>\n</xsl:when>\n<xsl:when test=\"$boolValueString = '1' \">\n<xsl:text>Áno</xsl:text>\n</xsl:when>\n<xsl:when test=\"$boolValueString = '0' \">\n<xsl:text>Nie</xsl:text>\n</xsl:when>\n<xsl:otherwise>\n<xsl:value-of select=\"$boolValueString\"></xsl:value-of>\n</xsl:otherwise>\n</xsl:choose>\n</xsl:template>\n<xsl:template name=\"formatTimeTrimSeconds\">\n<xsl:param name=\"time\" />\n<xsl:variable name=\"timeString\" select=\"string($time)\" />\n<xsl:if test=\"$timeString != ''\">\n<xsl:value-of select=\"substring($timeString, 1, 5)\" />\n</xsl:if>\n</xsl:template>\n<xsl:template name=\"formatTime\">\n<xsl:param name=\"time\" />\n<xsl:variable name=\"timeString\" select=\"string($time)\" />\n<xsl:if test=\"$timeString != ''\">\n<xsl:value-of select=\"substring($timeString, 1, 8)\" />\n</xsl:if>\n</xsl:template>\n<xsl:template name=\"string-replace-all\">\n<xsl:param name=\"text\"/>\n<xsl:param name=\"replace\"/>\n<xsl:param name=\"by\"/>\n<xsl:choose>\n<xsl:when test=\"contains($text, $replace)\">\n<xsl:value-of select=\"substring-before($text,$replace)\"/>\n<xsl:value-of select=\"$by\"/>\n<xsl:call-template name=\"string-replace-all\">\n<xsl:with-param name=\"text\" select=\"substring-after($text,$replace)\"/>\n<xsl:with-param name=\"replace\" select=\"$replace\"/>\n<xsl:with-param name=\"by\" select=\"$by\" />\n</xsl:call-template>\n</xsl:when>\n<xsl:otherwise>\n<xsl:value-of select=\"$text\"/>\n</xsl:otherwise>\n</xsl:choose>\n</xsl:template>\n<xsl:template name=\"formatToSkDateTime\">\n<xsl:param name=\"dateTime\" />\n<xsl:variable name=\"dateTimeString\" select=\"string($dateTime)\" />\n<xsl:choose>\n<xsl:when test=\"$dateTimeString!= '' and string-length($dateTimeString)>18 and string(number(substring($dateTimeString, 1, 4))) != 'NaN' \">\n<xsl:value-of select=\"concat(substring($dateTimeString, 9, 2), '.', substring($dateTimeString, 6, 2), '.', substring($dateTimeString, 1, 4),' ', substring($dateTimeString, 12, 2),':', substring($dateTimeString, 15, 2))\" />\n</xsl:when>\n<xsl:otherwise>\n<xsl:value-of select=\"$dateTimeString\"></xsl:value-of>\n</xsl:otherwise>\n</xsl:choose>\n</xsl:template>\n<xsl:template name=\"formatToSkDateTimeSecond\">\n<xsl:param name=\"dateTime\" />\n<xsl:variable name=\"dateTimeString\" select=\"string($dateTime)\" />\n<xsl:choose>\n<xsl:when test=\"$dateTimeString!= '' and string-length($dateTimeString)>18 and string(number(substring($dateTimeString, 1, 4))) != 'NaN' \">\n<xsl:value-of select=\"concat(substring($dateTimeString, 9, 2), '.', substring($dateTimeString, 6, 2), '.', substring($dateTimeString, 1, 4),' ', substring($dateTimeString, 12, 2),':', substring($dateTimeString, 15, 2),':', substring($dateTimeString, 18, 2))\" />\n</xsl:when>\n<xsl:otherwise>\n<xsl:value-of select=\"$dateTimeString\"></xsl:value-of>\n</xsl:otherwise>\n</xsl:choose>\n</xsl:template>\n</xsl:stylesheet>\n"

    XmlContentAsBase64:
      value: "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48R2VuZXJhbEFnZW5kYSB4bWxucz0iaHR0cDovL3NjaGVtYXMuZ292LnNrL2Zvcm0vQXBwLkdlbmVyYWxBZ2VuZGEvMS45Ij4KICA8c3ViamVjdD5Ob3bDqSBwb2RhbmllPC9zdWJqZWN0PgogIDx0ZXh0PlBvZMOhdmFtIHRvdG8gbm92w6kgcG9kYW5pZS48L3RleHQ+CjwvR2VuZXJhbEFnZW5kYT4="

    XmlSchemaAsBase64:
      value: "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHhzOnNjaGVtYSBlbGVtZW50Rm9ybURlZmF1bHQ9InF1YWxpZmllZCIgYXR0cmlidXRlRm9ybURlZmF1bHQ9InVucXVhbGlmaWVkIiB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHRhcmdldE5hbWVzcGFjZT0iaHR0cDovL3NjaGVtYXMuZ292LnNrL2Zvcm0vQXBwLkdlbmVyYWxBZ2VuZGEvMS45IiB4bWxucz0iaHR0cDovL3NjaGVtYXMuZ292LnNrL2Zvcm0vQXBwLkdlbmVyYWxBZ2VuZGEvMS45Ij4KPHhzOnNpbXBsZVR5cGUgbmFtZT0idGV4dEFyZWEiPgo8eHM6cmVzdHJpY3Rpb24gYmFzZT0ieHM6c3RyaW5nIj4KPC94czpyZXN0cmljdGlvbj4KPC94czpzaW1wbGVUeXBlPgo8eHM6c2ltcGxlVHlwZSBuYW1lPSJtZW5vIj4KPHhzOnJlc3RyaWN0aW9uIGJhc2U9InhzOnN0cmluZyI+CjwveHM6cmVzdHJpY3Rpb24+CjwveHM6c2ltcGxlVHlwZT4KPHhzOmVsZW1lbnQgbmFtZT0iR2VuZXJhbEFnZW5kYSI+Cjx4czpjb21wbGV4VHlwZT4KPHhzOnNlcXVlbmNlPgo8eHM6ZWxlbWVudCBuYW1lPSJzdWJqZWN0IiB0eXBlPSJtZW5vIiBtaW5PY2N1cnM9IjAiIG5pbGxhYmxlPSJ0cnVlIiAvPgo8eHM6ZWxlbWVudCBuYW1lPSJ0ZXh0IiB0eXBlPSJ0ZXh0QXJlYSIgbWluT2NjdXJzPSIwIiBuaWxsYWJsZT0idHJ1ZSIgLz4KPC94czpzZXF1ZW5jZT4KPC94czpjb21wbGV4VHlwZT4KPC94czplbGVtZW50Pgo8L3hzOnNjaGVtYT4K"

    XmlTransformationToHtmlAsBase64:
      value: ""

    XmlTransformationToPlaintextAsBase64:
      value: "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHhzbDpzdHlsZXNoZWV0IHZlcnNpb249IjEuMCIgeG1sbnM6eHNsPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L1hTTC9UcmFuc2Zvcm0iICB4bWxuczplZ29ucD0iaHR0cDovL3NjaGVtYXMuZ292LnNrL2Zvcm0vQXBwLkdlbmVyYWxBZ2VuZGEvMS45Ij4KPHhzbDpvdXRwdXQgbWV0aG9kPSJ0ZXh0IiBpbmRlbnQ9InllcyIgb21pdC14bWwtZGVjbGFyYXRpb249InllcyIvPgo8eHNsOnN0cmlwLXNwYWNlIGVsZW1lbnRzPSIqIiAvPgo8eHNsOnRlbXBsYXRlIG1hdGNoPSJlZ29ucDpHZW5lcmFsQWdlbmRhIj4KPHhzbDp0ZXh0PlbFoWVvYmVjbsOhIGFnZW5kYTwveHNsOnRleHQ+Cjx4c2w6YXBwbHktdGVtcGxhdGVzLz4KPC94c2w6dGVtcGxhdGU+Cjx4c2w6dGVtcGxhdGUgbWF0Y2g9ImVnb25wOkdlbmVyYWxBZ2VuZGEvZWdvbnA6c3ViamVjdCI+Cjx4c2w6aWYgdGVzdD0iLi90ZXh0KCkiPgo8eHNsOnRleHQ+JiN4QTs8L3hzbDp0ZXh0Pgo8eHNsOnRleHQ+JiMwOTs8L3hzbDp0ZXh0Pjx4c2w6dGV4dD5QcmVkbWV0OiA8L3hzbDp0ZXh0Pjx4c2w6Y2FsbC10ZW1wbGF0ZSBuYW1lPSJzdHJpbmctcmVwbGFjZS1hbGwiPjx4c2w6d2l0aC1wYXJhbSBuYW1lPSJ0ZXh0IiBzZWxlY3Q9Ii4iIC8+PHhzbDp3aXRoLXBhcmFtIG5hbWU9InJlcGxhY2UiIHNlbGVjdD0iJyYjMTA7JyIgLz48eHNsOndpdGgtcGFyYW0gbmFtZT0iYnkiIHNlbGVjdD0iJyYjMTM7JiMxMDsmIzA5OyciIC8+PC94c2w6Y2FsbC10ZW1wbGF0ZT4KPC94c2w6aWY+CjwveHNsOnRlbXBsYXRlPgo8eHNsOnRlbXBsYXRlIG1hdGNoPSJlZ29ucDpHZW5lcmFsQWdlbmRhL2Vnb25wOnRleHQiPgo8eHNsOmlmIHRlc3Q9Ii4vdGV4dCgpIj4KPHhzbDp0ZXh0PiYjeEE7PC94c2w6dGV4dD4KPHhzbDp0ZXh0PiYjMDk7PC94c2w6dGV4dD48eHNsOnRleHQ+VGV4dDogPC94c2w6dGV4dD48eHNsOmNhbGwtdGVtcGxhdGUgbmFtZT0ic3RyaW5nLXJlcGxhY2UtYWxsIj48eHNsOndpdGgtcGFyYW0gbmFtZT0idGV4dCIgc2VsZWN0PSIuIiAvPjx4c2w6d2l0aC1wYXJhbSBuYW1lPSJyZXBsYWNlIiBzZWxlY3Q9IicmIzEwOyciIC8+PHhzbDp3aXRoLXBhcmFtIG5hbWU9ImJ5IiBzZWxlY3Q9IicmIzEzOyYjMTA7JiMwOTsnIiAvPjwveHNsOmNhbGwtdGVtcGxhdGU+CjwveHNsOmlmPgo8L3hzbDp0ZW1wbGF0ZT4KPHhzbDp0ZW1wbGF0ZSBuYW1lPSJmb3JtYXRUb1NrRGF0ZSI+Cjx4c2w6cGFyYW0gbmFtZT0iZGF0ZSIgLz4KPHhzbDp2YXJpYWJsZSBuYW1lPSJkYXRlU3RyaW5nIiBzZWxlY3Q9InN0cmluZygkZGF0ZSkiIC8+Cjx4c2w6Y2hvb3NlPgo8eHNsOndoZW4gdGVzdD0iJGRhdGVTdHJpbmcgIT0gJycgYW5kIHN0cmluZy1sZW5ndGgoJGRhdGVTdHJpbmcpPTEwIGFuZCBzdHJpbmcobnVtYmVyKHN1YnN0cmluZygkZGF0ZVN0cmluZywgMSwgNCkpKSAhPSAnTmFOJyAiPgo8eHNsOnZhbHVlLW9mIHNlbGVjdD0iY29uY2F0KHN1YnN0cmluZygkZGF0ZVN0cmluZywgOSwgMiksICcuJywgc3Vic3RyaW5nKCRkYXRlU3RyaW5nLCA2LCAyKSwgJy4nLCBzdWJzdHJpbmcoJGRhdGVTdHJpbmcsIDEsIDQpKSIgLz4KPC94c2w6d2hlbj4KPHhzbDpvdGhlcndpc2U+Cjx4c2w6dmFsdWUtb2Ygc2VsZWN0PSIkZGF0ZVN0cmluZyI+PC94c2w6dmFsdWUtb2Y+CjwveHNsOm90aGVyd2lzZT4KPC94c2w6Y2hvb3NlPgo8L3hzbDp0ZW1wbGF0ZT4KPHhzbDp0ZW1wbGF0ZSBuYW1lPSJib29sZWFuQ2hlY2tib3hUb1N0cmluZyI+Cjx4c2w6cGFyYW0gbmFtZT0iYm9vbFZhbHVlIiAvPgo8eHNsOnZhcmlhYmxlIG5hbWU9ImJvb2xWYWx1ZVN0cmluZyIgc2VsZWN0PSJzdHJpbmcoJGJvb2xWYWx1ZSkiIC8+Cjx4c2w6Y2hvb3NlPgo8eHNsOndoZW4gdGVzdD0iJGJvb2xWYWx1ZVN0cmluZyA9ICd0cnVlJyAiPgo8eHNsOnRleHQ+w4FubzwveHNsOnRleHQ+CjwveHNsOndoZW4+Cjx4c2w6d2hlbiB0ZXN0PSIkYm9vbFZhbHVlU3RyaW5nID0gJ2ZhbHNlJyAiPgo8eHNsOnRleHQ+TmllPC94c2w6dGV4dD4KPC94c2w6d2hlbj4KPHhzbDp3aGVuIHRlc3Q9IiRib29sVmFsdWVTdHJpbmcgPSAnMScgIj4KPHhzbDp0ZXh0PsOBbm88L3hzbDp0ZXh0Pgo8L3hzbDp3aGVuPgo8eHNsOndoZW4gdGVzdD0iJGJvb2xWYWx1ZVN0cmluZyA9ICcwJyAiPgo8eHNsOnRleHQ+TmllPC94c2w6dGV4dD4KPC94c2w6d2hlbj4KPHhzbDpvdGhlcndpc2U+Cjx4c2w6dmFsdWUtb2Ygc2VsZWN0PSIkYm9vbFZhbHVlU3RyaW5nIj48L3hzbDp2YWx1ZS1vZj4KPC94c2w6b3RoZXJ3aXNlPgo8L3hzbDpjaG9vc2U+CjwveHNsOnRlbXBsYXRlPgo8eHNsOnRlbXBsYXRlIG5hbWU9ImZvcm1hdFRpbWVUcmltU2Vjb25kcyI+Cjx4c2w6cGFyYW0gbmFtZT0idGltZSIgLz4KPHhzbDp2YXJpYWJsZSBuYW1lPSJ0aW1lU3RyaW5nIiBzZWxlY3Q9InN0cmluZygkdGltZSkiIC8+Cjx4c2w6aWYgdGVzdD0iJHRpbWVTdHJpbmcgIT0gJyciPgo8eHNsOnZhbHVlLW9mIHNlbGVjdD0ic3Vic3RyaW5nKCR0aW1lU3RyaW5nLCAxLCA1KSIgLz4KPC94c2w6aWY+CjwveHNsOnRlbXBsYXRlPgo8eHNsOnRlbXBsYXRlIG5hbWU9ImZvcm1hdFRpbWUiPgo8eHNsOnBhcmFtIG5hbWU9InRpbWUiIC8+Cjx4c2w6dmFyaWFibGUgbmFtZT0idGltZVN0cmluZyIgc2VsZWN0PSJzdHJpbmcoJHRpbWUpIiAvPgo8eHNsOmlmIHRlc3Q9IiR0aW1lU3RyaW5nICE9ICcnIj4KPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9InN1YnN0cmluZygkdGltZVN0cmluZywgMSwgOCkiIC8+CjwveHNsOmlmPgo8L3hzbDp0ZW1wbGF0ZT4KPHhzbDp0ZW1wbGF0ZSBuYW1lPSJzdHJpbmctcmVwbGFjZS1hbGwiPgo8eHNsOnBhcmFtIG5hbWU9InRleHQiLz4KPHhzbDpwYXJhbSBuYW1lPSJyZXBsYWNlIi8+Cjx4c2w6cGFyYW0gbmFtZT0iYnkiLz4KPHhzbDpjaG9vc2U+Cjx4c2w6d2hlbiB0ZXN0PSJjb250YWlucygkdGV4dCwgJHJlcGxhY2UpIj4KPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9InN1YnN0cmluZy1iZWZvcmUoJHRleHQsJHJlcGxhY2UpIi8+Cjx4c2w6dmFsdWUtb2Ygc2VsZWN0PSIkYnkiLz4KPHhzbDpjYWxsLXRlbXBsYXRlIG5hbWU9InN0cmluZy1yZXBsYWNlLWFsbCI+Cjx4c2w6d2l0aC1wYXJhbSBuYW1lPSJ0ZXh0IiBzZWxlY3Q9InN1YnN0cmluZy1hZnRlcigkdGV4dCwkcmVwbGFjZSkiLz4KPHhzbDp3aXRoLXBhcmFtIG5hbWU9InJlcGxhY2UiIHNlbGVjdD0iJHJlcGxhY2UiLz4KPHhzbDp3aXRoLXBhcmFtIG5hbWU9ImJ5IiBzZWxlY3Q9IiRieSIgLz4KPC94c2w6Y2FsbC10ZW1wbGF0ZT4KPC94c2w6d2hlbj4KPHhzbDpvdGhlcndpc2U+Cjx4c2w6dmFsdWUtb2Ygc2VsZWN0PSIkdGV4dCIvPgo8L3hzbDpvdGhlcndpc2U+CjwveHNsOmNob29zZT4KPC94c2w6dGVtcGxhdGU+Cjx4c2w6dGVtcGxhdGUgbmFtZT0iZm9ybWF0VG9Ta0RhdGVUaW1lIj4KPHhzbDpwYXJhbSBuYW1lPSJkYXRlVGltZSIgLz4KPHhzbDp2YXJpYWJsZSBuYW1lPSJkYXRlVGltZVN0cmluZyIgc2VsZWN0PSJzdHJpbmcoJGRhdGVUaW1lKSIgLz4KPHhzbDpjaG9vc2U+Cjx4c2w6d2hlbiB0ZXN0PSIkZGF0ZVRpbWVTdHJpbmchPSAnJyBhbmQgc3RyaW5nLWxlbmd0aCgkZGF0ZVRpbWVTdHJpbmcpPjE4IGFuZCBzdHJpbmcobnVtYmVyKHN1YnN0cmluZygkZGF0ZVRpbWVTdHJpbmcsIDEsIDQpKSkgIT0gJ05hTicgIj4KPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9ImNvbmNhdChzdWJzdHJpbmcoJGRhdGVUaW1lU3RyaW5nLCA5LCAyKSwgJy4nLCBzdWJzdHJpbmcoJGRhdGVUaW1lU3RyaW5nLCA2LCAyKSwgJy4nLCBzdWJzdHJpbmcoJGRhdGVUaW1lU3RyaW5nLCAxLCA0KSwnICcsIHN1YnN0cmluZygkZGF0ZVRpbWVTdHJpbmcsIDEyLCAyKSwnOicsIHN1YnN0cmluZygkZGF0ZVRpbWVTdHJpbmcsIDE1LCAyKSkiIC8+CjwveHNsOndoZW4+Cjx4c2w6b3RoZXJ3aXNlPgo8eHNsOnZhbHVlLW9mIHNlbGVjdD0iJGRhdGVUaW1lU3RyaW5nIj48L3hzbDp2YWx1ZS1vZj4KPC94c2w6b3RoZXJ3aXNlPgo8L3hzbDpjaG9vc2U+CjwveHNsOnRlbXBsYXRlPgo8eHNsOnRlbXBsYXRlIG5hbWU9ImZvcm1hdFRvU2tEYXRlVGltZVNlY29uZCI+Cjx4c2w6cGFyYW0gbmFtZT0iZGF0ZVRpbWUiIC8+Cjx4c2w6dmFyaWFibGUgbmFtZT0iZGF0ZVRpbWVTdHJpbmciIHNlbGVjdD0ic3RyaW5nKCRkYXRlVGltZSkiIC8+Cjx4c2w6Y2hvb3NlPgo8eHNsOndoZW4gdGVzdD0iJGRhdGVUaW1lU3RyaW5nIT0gJycgYW5kIHN0cmluZy1sZW5ndGgoJGRhdGVUaW1lU3RyaW5nKT4xOCBhbmQgc3RyaW5nKG51bWJlcihzdWJzdHJpbmcoJGRhdGVUaW1lU3RyaW5nLCAxLCA0KSkpICE9ICdOYU4nICI+Cjx4c2w6dmFsdWUtb2Ygc2VsZWN0PSJjb25jYXQoc3Vic3RyaW5nKCRkYXRlVGltZVN0cmluZywgOSwgMiksICcuJywgc3Vic3RyaW5nKCRkYXRlVGltZVN0cmluZywgNiwgMiksICcuJywgc3Vic3RyaW5nKCRkYXRlVGltZVN0cmluZywgMSwgNCksJyAnLCBzdWJzdHJpbmcoJGRhdGVUaW1lU3RyaW5nLCAxMiwgMiksJzonLCBzdWJzdHJpbmcoJGRhdGVUaW1lU3RyaW5nLCAxNSwgMiksJzonLCBzdWJzdHJpbmcoJGRhdGVUaW1lU3RyaW5nLCAxOCwgMikpIiAvPgo8L3hzbDp3aGVuPgo8eHNsOm90aGVyd2lzZT4KPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9IiRkYXRlVGltZVN0cmluZyI+PC94c2w6dmFsdWUtb2Y+CjwveHNsOm90aGVyd2lzZT4KPC94c2w6Y2hvb3NlPgo8L3hzbDp0ZW1wbGF0ZT4KPC94c2w6c3R5bGVzaGVldD4K"

    PdfContent:
      value: ''
